From 982b8fc43a0593ac9009afc0c7011609904197cb Mon Sep 17 00:00:00 2001
From: Jenway <JenwayHere@foxmail.com>
Date: Fri, 2 Dec 2022 23:05:13 +0800
Subject: c


diff --git a/README.MD b/README.MD
new file mode 100644
index 0000000..a391eed
--- /dev/null
+++ b/README.MD
@@ -0,0 +1,55 @@
+# GOMOKU
+
+简单的五子棋，期末大作业。
+
+## 1
+
+Based on QT 5.9.0
+
+## 算法
+
+	评分表的算法。
+
+### 功能实现
+
+* [X] 1.能够正确判断对局输赢并结束游戏。
+
+
+### 文件操作
+
+* [X] 1.能够将已进行对局的每一步信息存储到文件中。
+* [X] 2.能够从文件中读取对局信息。
+* [X] 3.能够将从文件中读取的信息以对局回放的形式展示出来。
+
+### 多模式
+
+* [X] PVP、PVE(P-first & E-first)、EVE
+
+### 图形界面
+
+* [X] 1.使用图形化界面的形式来实现五子棋。
+* [X] 2.通过鼠标来控制棋子落点。
+
+### 功能完善(30分)
+
+* [X] 1.数据持久化:通过更巧妙的方法和形式来存储对局信息。
+
+	例如使用json、xml、csv等格式存储信息。
+
+* [ ] 2．更完善的存储操作：可以存储多个对局的信息，实现对局信息的增删改查功能。
+* [ ] 3．异常处理:能够对程序运行过程中出现的各种异常进行提示和处理。
+
+	例如提示操作越界、违规、存储信息的文件遭到破坏等。
+
+* [ ] 4. 数据处理：将存储的对局数据进行排名或记录，展示每一局的时间、步数、输赢方等信息。
+
+	将存储的信息进行可视化处理。
+
+* [X] 5. 软件发布：将程序打包成软件。
+
+	例如将程序打包成exe文件，并包括程序的运行环境，确保可以在非开发环境中正常打开。
+
+### 聪明的电脑
+
+* [X] 1.在和人对弈时能够对弈至少20步(总步数)。
+* [ ] 2．通过各种方式实现人机对弈的机器先手必胜。
\ No newline at end of file
diff --git a/data.qrc b/data.qrc
index 3fd215d..ee76642 100644
--- a/data.qrc
+++ b/data.qrc
@@ -1 +1,3 @@
-<RCC/>
+<RCC>
+    <qresource prefix="/data"/>
+</RCC>
diff --git a/favicon.ico b/favicon.ico
new file mode 100644
index 0000000..bd32fc4
Binary files /dev/null and b/favicon.ico differ
diff --git a/gameover.cpp b/gameover.cpp
index 3ea9b9e..6efa68c 100644
--- a/gameover.cpp
+++ b/gameover.cpp
@@ -1,14 +1,34 @@
 #include "gameover.h"
 #include "ui_gameover.h"
+#include "gameset.h"
+#include "mainwindow.h"
 
 gameover::gameover(QWidget *parent) :
     QDialog(parent),
     ui(new Ui::gameover)
 {
     ui->setupUi(this);
+    this->setWindowFlags(Qt::FramelessWindowHint | windowFlags());
+    QLabel *label = new QLabel(this);
+    QMovie *movie = new QMovie(":image/icon/miku1.gif");
+    label->setMovie(movie); // 1. 设置要显示的 GIF 动画图片
+    movie->start(); // 2. 启动动画
+    label->show();
 }
 
 gameover::~gameover()
 {
     delete ui;
 }
+
+void gameover::on_buttonBox_rejected()
+{
+    QApplication *q;
+    q->quit();
+}
+
+
+void gameover::on_buttonBox_accepted()
+{
+    this->hide();
+}
diff --git a/gameover.h b/gameover.h
index 01be229..c426a3a 100644
--- a/gameover.h
+++ b/gameover.h
@@ -15,6 +15,11 @@ public:
     explicit gameover(QWidget *parent = 0);
     ~gameover();
 
+
+private slots:
+    void on_buttonBox_rejected(); 
+    void on_buttonBox_accepted();
+
 private:
     Ui::gameover *ui;
 };
diff --git a/gameover.ui b/gameover.ui
index 9f049cf..97c30a7 100644
--- a/gameover.ui
+++ b/gameover.ui
@@ -1,9 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
 <ui version="4.0">
- <author/>
- <comment/>
- <exportmacro/>
  <class>gameover</class>
- <widget name="gameover" class="QDialog">
+ <widget class="QDialog" name="gameover">
   <property name="geometry">
    <rect>
     <x>0</x>
@@ -15,15 +13,27 @@
   <property name="windowTitle">
    <string>Dialog</string>
   </property>
-  <widget name="buttonBox" class="QDialogButtonBox">
+  <property name="styleSheet">
+   <string notr="true">background-image: url(:/image/icon/miku1.gif);</string>
+  </property>
+  <widget class="QDialogButtonBox" name="buttonBox">
    <property name="geometry">
     <rect>
-     <x>30</x>
+     <x>100</x>
      <y>240</y>
-     <width>341</width>
-     <height>32</height>
+     <width>181</width>
+     <height>61</height>
     </rect>
    </property>
+   <property name="maximumSize">
+    <size>
+     <width>181</width>
+     <height>61</height>
+    </size>
+   </property>
+   <property name="styleSheet">
+    <string notr="true">background-color: rgb(255, 255, 255);</string>
+   </property>
    <property name="orientation">
     <enum>Qt::Horizontal</enum>
    </property>
@@ -31,8 +41,37 @@
     <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>
    </property>
   </widget>
+  <widget class="QLabel" name="label">
+   <property name="geometry">
+    <rect>
+     <x>280</x>
+     <y>0</y>
+     <width>121</width>
+     <height>231</height>
+    </rect>
+   </property>
+   <property name="font">
+    <font>
+     <family>华康宋体W12(P)</family>
+     <pointsize>15</pointsize>
+     <weight>50</weight>
+     <italic>false</italic>
+     <bold>false</bold>
+    </font>
+   </property>
+   <property name="styleSheet">
+    <string notr="true">font: 15pt &quot;华康宋体W12(P)&quot;;
+background-color: rgb(85, 170, 255);</string>
+   </property>
+   <property name="text">
+    <string>    再
+    来
+一
+次
+ ？</string>
+   </property>
+  </widget>
  </widget>
- <pixmapfunction/>
  <resources/>
  <connections>
   <connection>
@@ -46,8 +85,8 @@
      <y>254</y>
     </hint>
     <hint type="destinationlabel">
-     <x>157</x>
-     <y>274</y>
+     <x>199</x>
+     <y>149</y>
     </hint>
    </hints>
   </connection>
diff --git a/gameset.h b/gameset.h
new file mode 100644
index 0000000..7515f32
--- /dev/null
+++ b/gameset.h
@@ -0,0 +1,66 @@
+#ifndef GAMESET_H
+#define GAMESET_H
+
+#include <QPainter>
+#include <QWidget>
+#include <QMouseEvent>
+#include <QFont>
+#include <QMainWindow>
+#include <QDesktopWidget>
+#include <QDebug>
+#include <QDialog>
+#include <QTimer>
+#include <QDateTime>
+#include <QString>
+//#include <QtMultimedia/
+
+#define SIZE_VOL 2
+#define VIEW_VOL 0.4
+
+#define EDGE (75/SIZE_VOL)
+#define BLOCK_SIZE (70/SIZE_VOL)
+#define LENGTH (70 * 16/SIZE_VOL)
+#define GO_SIZE (30/SIZE_VOL)
+#define COL 15
+
+
+enum PLAYER{
+    playerwhite,
+    playerblack
+};
+
+enum GAMEMODE{
+    unstarted,
+    started
+};
+
+enum GAMETYPE{
+    PVP,
+    PVE,
+    PVE2,
+    EVE
+};
+
+
+
+typedef struct RECORDS
+{
+    int x;
+    int y;
+    int count;
+    int player;
+    struct RECORDS *next;
+
+}RECORDS;
+
+typedef struct GOS
+{
+    int X;
+    int Y;
+    int score;
+}GOS;
+
+//int RESTART_SEEK=0;
+
+
+#endif // GAMESET_H
diff --git a/gomoku.pro b/gomoku.pro
new file mode 100644
index 0000000..954a7f1
--- /dev/null
+++ b/gomoku.pro
@@ -0,0 +1,57 @@
+#-------------------------------------------------
+#
+# Project created by QtCreator 2022-11-25T21:12:57
+#
+#-------------------------------------------------
+
+QT       += core gui
+
+greaterThan(QT_MAJOR_VERSION, 4): QT += widgets
+
+TARGET = gomoku
+TEMPLATE = app
+
+# The following define makes your compiler emit warnings if you use
+# any feature of Qt which as been marked as deprecated (the exact warnings
+# depend on your compiler). Please consult the documentation of the
+# deprecated API in order to know how to port your code away from it.
+DEFINES += QT_DEPRECATED_WARNINGS
+
+# You can also make your code fail to compile if you use deprecated APIs.
+# In order to do so, uncomment the following line.
+# You can also select to disable deprecated APIs only up to a certain version of Qt.
+#DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000    # disables all the APIs deprecated before Qt 6.0.0
+
+
+SOURCES += \
+        main.cpp \
+        mainwindow.cpp \
+    gameover.cpp \
+    start.cpp \
+    history.cpp \
+    historyboard.cpp
+
+HEADERS += \
+        mainwindow.h \
+    gameset.h \
+    gameover.h \
+    start.h \
+    history.h \
+    historyboard.h
+
+FORMS += \
+        mainwindow.ui \
+    gameover.ui \
+    start.ui \
+    history.ui \
+    historyboard.ui
+
+RESOURCES += \
+    icon.qrc \
+    data.qrc
+
+DISTFILES += \
+    logo.rc \
+    favicon2.ico
+
+RC_FILE += logo.rc
diff --git a/gomoku.pro.user b/gomoku.pro.user
new file mode 100644
index 0000000..23aa4ae
--- /dev/null
+++ b/gomoku.pro.user
@@ -0,0 +1,373 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE QtCreatorProject>
+<!-- Written by QtCreator 4.3.1, 2022-12-02T22:45:04. -->
+<qtcreator>
+ <data>
+  <variable>EnvironmentId</variable>
+  <value type="QByteArray">{d88e3516-2c9b-4d41-b5a0-3e14bd761029}</value>
+ </data>
+ <data>
+  <variable>ProjectExplorer.Project.ActiveTarget</variable>
+  <value type="int">0</value>
+ </data>
+ <data>
+  <variable>ProjectExplorer.Project.EditorSettings</variable>
+  <valuemap type="QVariantMap">
+   <value type="bool" key="EditorConfiguration.AutoIndent">true</value>
+   <value type="bool" key="EditorConfiguration.AutoSpacesForTabs">false</value>
+   <value type="bool" key="EditorConfiguration.CamelCaseNavigation">true</value>
+   <valuemap type="QVariantMap" key="EditorConfiguration.CodeStyle.0">
+    <value type="QString" key="language">Cpp</value>
+    <valuemap type="QVariantMap" key="value">
+     <value type="QByteArray" key="CurrentPreferences">CppGlobal</value>
+    </valuemap>
+   </valuemap>
+   <valuemap type="QVariantMap" key="EditorConfiguration.CodeStyle.1">
+    <value type="QString" key="language">QmlJS</value>
+    <valuemap type="QVariantMap" key="value">
+     <value type="QByteArray" key="CurrentPreferences">QmlJSGlobal</value>
+    </valuemap>
+   </valuemap>
+   <value type="int" key="EditorConfiguration.CodeStyle.Count">2</value>
+   <value type="QByteArray" key="EditorConfiguration.Codec">UTF-8</value>
+   <value type="bool" key="EditorConfiguration.ConstrainTooltips">false</value>
+   <value type="int" key="EditorConfiguration.IndentSize">4</value>
+   <value type="bool" key="EditorConfiguration.KeyboardTooltips">false</value>
+   <value type="int" key="EditorConfiguration.MarginColumn">80</value>
+   <value type="bool" key="EditorConfiguration.MouseHiding">true</value>
+   <value type="bool" key="EditorConfiguration.MouseNavigation">true</value>
+   <value type="int" key="EditorConfiguration.PaddingMode">1</value>
+   <value type="bool" key="EditorConfiguration.ScrollWheelZooming">true</value>
+   <value type="bool" key="EditorConfiguration.ShowMargin">false</value>
+   <value type="int" key="EditorConfiguration.SmartBackspaceBehavior">0</value>
+   <value type="bool" key="EditorConfiguration.SmartSelectionChanging">true</value>
+   <value type="bool" key="EditorConfiguration.SpacesForTabs">true</value>
+   <value type="int" key="EditorConfiguration.TabKeyBehavior">0</value>
+   <value type="int" key="EditorConfiguration.TabSize">8</value>
+   <value type="bool" key="EditorConfiguration.UseGlobal">true</value>
+   <value type="int" key="EditorConfiguration.Utf8BomBehavior">1</value>
+   <value type="bool" key="EditorConfiguration.addFinalNewLine">true</value>
+   <value type="bool" key="EditorConfiguration.cleanIndentation">true</value>
+   <value type="bool" key="EditorConfiguration.cleanWhitespace">true</value>
+   <value type="bool" key="EditorConfiguration.inEntireDocument">false</value>
+  </valuemap>
+ </data>
+ <data>
+  <variable>ProjectExplorer.Project.PluginSettings</variable>
+  <valuemap type="QVariantMap"/>
+ </data>
+ <data>
+  <variable>ProjectExplorer.Project.Target.0</variable>
+  <valuemap type="QVariantMap">
+   <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">Desktop Qt 5.9.0 MinGW 32bit</value>
+   <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName">Desktop Qt 5.9.0 MinGW 32bit</value>
+   <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">qt.59.win32_mingw53_kit</value>
+   <value type="int" key="ProjectExplorer.Target.ActiveBuildConfiguration">1</value>
+   <value type="int" key="ProjectExplorer.Target.ActiveDeployConfiguration">0</value>
+   <value type="int" key="ProjectExplorer.Target.ActiveRunConfiguration">0</value>
+   <valuemap type="QVariantMap" key="ProjectExplorer.Target.BuildConfiguration.0">
+    <value type="QString" key="ProjectExplorer.BuildConfiguration.BuildDirectory">E:/Documents/codeFiles/_project/build-gomoku-Desktop_Qt_5_9_0_MinGW_32bit-Debug</value>
+    <valuemap type="QVariantMap" key="ProjectExplorer.BuildConfiguration.BuildStepList.0">
+     <valuemap type="QVariantMap" key="ProjectExplorer.BuildStepList.Step.0">
+      <value type="bool" key="ProjectExplorer.BuildStep.Enabled">true</value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">qmake</value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">QtProjectManager.QMakeBuildStep</value>
+      <value type="bool" key="QtProjectManager.QMakeBuildStep.LinkQmlDebuggingLibrary">true</value>
+      <value type="QString" key="QtProjectManager.QMakeBuildStep.QMakeArguments"></value>
+      <value type="bool" key="QtProjectManager.QMakeBuildStep.QMakeForced">false</value>
+      <value type="bool" key="QtProjectManager.QMakeBuildStep.SeparateDebugInfo">false</value>
+      <value type="bool" key="QtProjectManager.QMakeBuildStep.UseQtQuickCompiler">false</value>
+     </valuemap>
+     <valuemap type="QVariantMap" key="ProjectExplorer.BuildStepList.Step.1">
+      <value type="bool" key="ProjectExplorer.BuildStep.Enabled">true</value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">Make</value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">Qt4ProjectManager.MakeStep</value>
+      <valuelist type="QVariantList" key="Qt4ProjectManager.MakeStep.AutomaticallyAddedMakeArguments"/>
+      <value type="bool" key="Qt4ProjectManager.MakeStep.Clean">false</value>
+      <value type="QString" key="Qt4ProjectManager.MakeStep.MakeArguments"></value>
+      <value type="QString" key="Qt4ProjectManager.MakeStep.MakeCommand"></value>
+     </valuemap>
+     <value type="int" key="ProjectExplorer.BuildStepList.StepsCount">2</value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">构建</value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">ProjectExplorer.BuildSteps.Build</value>
+    </valuemap>
+    <valuemap type="QVariantMap" key="ProjectExplorer.BuildConfiguration.BuildStepList.1">
+     <valuemap type="QVariantMap" key="ProjectExplorer.BuildStepList.Step.0">
+      <value type="bool" key="ProjectExplorer.BuildStep.Enabled">true</value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">Make</value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">Qt4ProjectManager.MakeStep</value>
+      <valuelist type="QVariantList" key="Qt4ProjectManager.MakeStep.AutomaticallyAddedMakeArguments"/>
+      <value type="bool" key="Qt4ProjectManager.MakeStep.Clean">true</value>
+      <value type="QString" key="Qt4ProjectManager.MakeStep.MakeArguments">clean</value>
+      <value type="QString" key="Qt4ProjectManager.MakeStep.MakeCommand"></value>
+     </valuemap>
+     <value type="int" key="ProjectExplorer.BuildStepList.StepsCount">1</value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">清理</value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">ProjectExplorer.BuildSteps.Clean</value>
+    </valuemap>
+    <value type="int" key="ProjectExplorer.BuildConfiguration.BuildStepListCount">2</value>
+    <value type="bool" key="ProjectExplorer.BuildConfiguration.ClearSystemEnvironment">false</value>
+    <valuelist type="QVariantList" key="ProjectExplorer.BuildConfiguration.UserEnvironmentChanges"/>
+    <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">Debug</value>
+    <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+    <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">Qt4ProjectManager.Qt4BuildConfiguration</value>
+    <value type="int" key="Qt4ProjectManager.Qt4BuildConfiguration.BuildConfiguration">2</value>
+    <value type="bool" key="Qt4ProjectManager.Qt4BuildConfiguration.UseShadowBuild">true</value>
+   </valuemap>
+   <valuemap type="QVariantMap" key="ProjectExplorer.Target.BuildConfiguration.1">
+    <value type="QString" key="ProjectExplorer.BuildConfiguration.BuildDirectory">E:/Documents/codeFiles/_project/build-gomoku-Desktop_Qt_5_9_0_MinGW_32bit-Release</value>
+    <valuemap type="QVariantMap" key="ProjectExplorer.BuildConfiguration.BuildStepList.0">
+     <valuemap type="QVariantMap" key="ProjectExplorer.BuildStepList.Step.0">
+      <value type="bool" key="ProjectExplorer.BuildStep.Enabled">true</value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">qmake</value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">QtProjectManager.QMakeBuildStep</value>
+      <value type="bool" key="QtProjectManager.QMakeBuildStep.LinkQmlDebuggingLibrary">false</value>
+      <value type="QString" key="QtProjectManager.QMakeBuildStep.QMakeArguments"></value>
+      <value type="bool" key="QtProjectManager.QMakeBuildStep.QMakeForced">false</value>
+      <value type="bool" key="QtProjectManager.QMakeBuildStep.SeparateDebugInfo">false</value>
+      <value type="bool" key="QtProjectManager.QMakeBuildStep.UseQtQuickCompiler">false</value>
+     </valuemap>
+     <valuemap type="QVariantMap" key="ProjectExplorer.BuildStepList.Step.1">
+      <value type="bool" key="ProjectExplorer.BuildStep.Enabled">true</value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">Make</value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">Qt4ProjectManager.MakeStep</value>
+      <valuelist type="QVariantList" key="Qt4ProjectManager.MakeStep.AutomaticallyAddedMakeArguments"/>
+      <value type="bool" key="Qt4ProjectManager.MakeStep.Clean">false</value>
+      <value type="QString" key="Qt4ProjectManager.MakeStep.MakeArguments"></value>
+      <value type="QString" key="Qt4ProjectManager.MakeStep.MakeCommand"></value>
+     </valuemap>
+     <value type="int" key="ProjectExplorer.BuildStepList.StepsCount">2</value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">构建</value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">ProjectExplorer.BuildSteps.Build</value>
+    </valuemap>
+    <valuemap type="QVariantMap" key="ProjectExplorer.BuildConfiguration.BuildStepList.1">
+     <valuemap type="QVariantMap" key="ProjectExplorer.BuildStepList.Step.0">
+      <value type="bool" key="ProjectExplorer.BuildStep.Enabled">true</value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">Make</value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">Qt4ProjectManager.MakeStep</value>
+      <valuelist type="QVariantList" key="Qt4ProjectManager.MakeStep.AutomaticallyAddedMakeArguments"/>
+      <value type="bool" key="Qt4ProjectManager.MakeStep.Clean">true</value>
+      <value type="QString" key="Qt4ProjectManager.MakeStep.MakeArguments">clean</value>
+      <value type="QString" key="Qt4ProjectManager.MakeStep.MakeCommand"></value>
+     </valuemap>
+     <value type="int" key="ProjectExplorer.BuildStepList.StepsCount">1</value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">清理</value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">ProjectExplorer.BuildSteps.Clean</value>
+    </valuemap>
+    <value type="int" key="ProjectExplorer.BuildConfiguration.BuildStepListCount">2</value>
+    <value type="bool" key="ProjectExplorer.BuildConfiguration.ClearSystemEnvironment">false</value>
+    <valuelist type="QVariantList" key="ProjectExplorer.BuildConfiguration.UserEnvironmentChanges"/>
+    <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">Release</value>
+    <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+    <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">Qt4ProjectManager.Qt4BuildConfiguration</value>
+    <value type="int" key="Qt4ProjectManager.Qt4BuildConfiguration.BuildConfiguration">0</value>
+    <value type="bool" key="Qt4ProjectManager.Qt4BuildConfiguration.UseShadowBuild">true</value>
+   </valuemap>
+   <valuemap type="QVariantMap" key="ProjectExplorer.Target.BuildConfiguration.2">
+    <value type="QString" key="ProjectExplorer.BuildConfiguration.BuildDirectory">E:/Documents/codeFiles/_project/build-gomoku-Desktop_Qt_5_9_0_MinGW_32bit-Profile</value>
+    <valuemap type="QVariantMap" key="ProjectExplorer.BuildConfiguration.BuildStepList.0">
+     <valuemap type="QVariantMap" key="ProjectExplorer.BuildStepList.Step.0">
+      <value type="bool" key="ProjectExplorer.BuildStep.Enabled">true</value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">qmake</value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">QtProjectManager.QMakeBuildStep</value>
+      <value type="bool" key="QtProjectManager.QMakeBuildStep.LinkQmlDebuggingLibrary">true</value>
+      <value type="QString" key="QtProjectManager.QMakeBuildStep.QMakeArguments"></value>
+      <value type="bool" key="QtProjectManager.QMakeBuildStep.QMakeForced">false</value>
+      <value type="bool" key="QtProjectManager.QMakeBuildStep.SeparateDebugInfo">true</value>
+      <value type="bool" key="QtProjectManager.QMakeBuildStep.UseQtQuickCompiler">false</value>
+     </valuemap>
+     <valuemap type="QVariantMap" key="ProjectExplorer.BuildStepList.Step.1">
+      <value type="bool" key="ProjectExplorer.BuildStep.Enabled">true</value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">Make</value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">Qt4ProjectManager.MakeStep</value>
+      <valuelist type="QVariantList" key="Qt4ProjectManager.MakeStep.AutomaticallyAddedMakeArguments"/>
+      <value type="bool" key="Qt4ProjectManager.MakeStep.Clean">false</value>
+      <value type="QString" key="Qt4ProjectManager.MakeStep.MakeArguments"></value>
+      <value type="QString" key="Qt4ProjectManager.MakeStep.MakeCommand"></value>
+     </valuemap>
+     <value type="int" key="ProjectExplorer.BuildStepList.StepsCount">2</value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">构建</value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">ProjectExplorer.BuildSteps.Build</value>
+    </valuemap>
+    <valuemap type="QVariantMap" key="ProjectExplorer.BuildConfiguration.BuildStepList.1">
+     <valuemap type="QVariantMap" key="ProjectExplorer.BuildStepList.Step.0">
+      <value type="bool" key="ProjectExplorer.BuildStep.Enabled">true</value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">Make</value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+      <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">Qt4ProjectManager.MakeStep</value>
+      <valuelist type="QVariantList" key="Qt4ProjectManager.MakeStep.AutomaticallyAddedMakeArguments"/>
+      <value type="bool" key="Qt4ProjectManager.MakeStep.Clean">true</value>
+      <value type="QString" key="Qt4ProjectManager.MakeStep.MakeArguments">clean</value>
+      <value type="QString" key="Qt4ProjectManager.MakeStep.MakeCommand"></value>
+     </valuemap>
+     <value type="int" key="ProjectExplorer.BuildStepList.StepsCount">1</value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">清理</value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">ProjectExplorer.BuildSteps.Clean</value>
+    </valuemap>
+    <value type="int" key="ProjectExplorer.BuildConfiguration.BuildStepListCount">2</value>
+    <value type="bool" key="ProjectExplorer.BuildConfiguration.ClearSystemEnvironment">false</value>
+    <valuelist type="QVariantList" key="ProjectExplorer.BuildConfiguration.UserEnvironmentChanges"/>
+    <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">Profile</value>
+    <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+    <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">Qt4ProjectManager.Qt4BuildConfiguration</value>
+    <value type="int" key="Qt4ProjectManager.Qt4BuildConfiguration.BuildConfiguration">0</value>
+    <value type="bool" key="Qt4ProjectManager.Qt4BuildConfiguration.UseShadowBuild">true</value>
+   </valuemap>
+   <value type="int" key="ProjectExplorer.Target.BuildConfigurationCount">3</value>
+   <valuemap type="QVariantMap" key="ProjectExplorer.Target.DeployConfiguration.0">
+    <valuemap type="QVariantMap" key="ProjectExplorer.BuildConfiguration.BuildStepList.0">
+     <value type="int" key="ProjectExplorer.BuildStepList.StepsCount">0</value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">部署</value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+     <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">ProjectExplorer.BuildSteps.Deploy</value>
+    </valuemap>
+    <value type="int" key="ProjectExplorer.BuildConfiguration.BuildStepListCount">1</value>
+    <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">在本地部署</value>
+    <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+    <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">ProjectExplorer.DefaultDeployConfiguration</value>
+   </valuemap>
+   <value type="int" key="ProjectExplorer.Target.DeployConfigurationCount">1</value>
+   <valuemap type="QVariantMap" key="ProjectExplorer.Target.PluginSettings"/>
+   <valuemap type="QVariantMap" key="ProjectExplorer.Target.RunConfiguration.0">
+    <value type="bool" key="Analyzer.QmlProfiler.AggregateTraces">false</value>
+    <value type="bool" key="Analyzer.QmlProfiler.FlushEnabled">false</value>
+    <value type="uint" key="Analyzer.QmlProfiler.FlushInterval">1000</value>
+    <value type="QString" key="Analyzer.QmlProfiler.LastTraceFile"></value>
+    <value type="bool" key="Analyzer.QmlProfiler.Settings.UseGlobalSettings">true</value>
+    <valuelist type="QVariantList" key="Analyzer.Valgrind.AddedSuppressionFiles"/>
+    <value type="bool" key="Analyzer.Valgrind.Callgrind.CollectBusEvents">false</value>
+    <value type="bool" key="Analyzer.Valgrind.Callgrind.CollectSystime">false</value>
+    <value type="bool" key="Analyzer.Valgrind.Callgrind.EnableBranchSim">false</value>
+    <value type="bool" key="Analyzer.Valgrind.Callgrind.EnableCacheSim">false</value>
+    <value type="bool" key="Analyzer.Valgrind.Callgrind.EnableEventToolTips">true</value>
+    <value type="double" key="Analyzer.Valgrind.Callgrind.MinimumCostRatio">0.01</value>
+    <value type="double" key="Analyzer.Valgrind.Callgrind.VisualisationMinimumCostRatio">10</value>
+    <value type="bool" key="Analyzer.Valgrind.FilterExternalIssues">true</value>
+    <value type="int" key="Analyzer.Valgrind.LeakCheckOnFinish">1</value>
+    <value type="int" key="Analyzer.Valgrind.NumCallers">25</value>
+    <valuelist type="QVariantList" key="Analyzer.Valgrind.RemovedSuppressionFiles"/>
+    <value type="int" key="Analyzer.Valgrind.SelfModifyingCodeDetection">1</value>
+    <value type="bool" key="Analyzer.Valgrind.Settings.UseGlobalSettings">true</value>
+    <value type="bool" key="Analyzer.Valgrind.ShowReachable">false</value>
+    <value type="bool" key="Analyzer.Valgrind.TrackOrigins">true</value>
+    <value type="QString" key="Analyzer.Valgrind.ValgrindExecutable">valgrind</value>
+    <valuelist type="QVariantList" key="Analyzer.Valgrind.VisibleErrorKinds">
+     <value type="int">0</value>
+     <value type="int">1</value>
+     <value type="int">2</value>
+     <value type="int">3</value>
+     <value type="int">4</value>
+     <value type="int">5</value>
+     <value type="int">6</value>
+     <value type="int">7</value>
+     <value type="int">8</value>
+     <value type="int">9</value>
+     <value type="int">10</value>
+     <value type="int">11</value>
+     <value type="int">12</value>
+     <value type="int">13</value>
+     <value type="int">14</value>
+    </valuelist>
+    <value type="int" key="PE.EnvironmentAspect.Base">2</value>
+    <valuelist type="QVariantList" key="PE.EnvironmentAspect.Changes"/>
+    <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">gomoku</value>
+    <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+    <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">Qt4ProjectManager.Qt4RunConfiguration:E:/Documents/codeFiles/_project/gomoku/gomoku.pro</value>
+    <value type="bool" key="QmakeProjectManager.QmakeRunConfiguration.UseLibrarySearchPath">true</value>
+    <value type="QString" key="Qt4ProjectManager.Qt4RunConfiguration.CommandLineArguments"></value>
+    <value type="QString" key="Qt4ProjectManager.Qt4RunConfiguration.ProFile">gomoku.pro</value>
+    <value type="bool" key="Qt4ProjectManager.Qt4RunConfiguration.UseDyldImageSuffix">false</value>
+    <value type="QString" key="Qt4ProjectManager.Qt4RunConfiguration.UserWorkingDirectory"></value>
+    <value type="QString" key="Qt4ProjectManager.Qt4RunConfiguration.UserWorkingDirectory.default">E:/Documents/codeFiles/_project/build-gomoku-Desktop_Qt_5_9_0_MinGW_32bit-Release</value>
+    <value type="uint" key="RunConfiguration.QmlDebugServerPort">3768</value>
+    <value type="bool" key="RunConfiguration.UseCppDebugger">false</value>
+    <value type="bool" key="RunConfiguration.UseCppDebuggerAuto">true</value>
+    <value type="bool" key="RunConfiguration.UseMultiProcess">false</value>
+    <value type="bool" key="RunConfiguration.UseQmlDebugger">false</value>
+    <value type="bool" key="RunConfiguration.UseQmlDebuggerAuto">true</value>
+   </valuemap>
+   <valuemap type="QVariantMap" key="ProjectExplorer.Target.RunConfiguration.1">
+    <value type="bool" key="Analyzer.QmlProfiler.AggregateTraces">false</value>
+    <value type="bool" key="Analyzer.QmlProfiler.FlushEnabled">false</value>
+    <value type="uint" key="Analyzer.QmlProfiler.FlushInterval">1000</value>
+    <value type="QString" key="Analyzer.QmlProfiler.LastTraceFile"></value>
+    <value type="bool" key="Analyzer.QmlProfiler.Settings.UseGlobalSettings">true</value>
+    <valuelist type="QVariantList" key="Analyzer.Valgrind.AddedSuppressionFiles"/>
+    <value type="bool" key="Analyzer.Valgrind.Callgrind.CollectBusEvents">false</value>
+    <value type="bool" key="Analyzer.Valgrind.Callgrind.CollectSystime">false</value>
+    <value type="bool" key="Analyzer.Valgrind.Callgrind.EnableBranchSim">false</value>
+    <value type="bool" key="Analyzer.Valgrind.Callgrind.EnableCacheSim">false</value>
+    <value type="bool" key="Analyzer.Valgrind.Callgrind.EnableEventToolTips">true</value>
+    <value type="double" key="Analyzer.Valgrind.Callgrind.MinimumCostRatio">0.01</value>
+    <value type="double" key="Analyzer.Valgrind.Callgrind.VisualisationMinimumCostRatio">10</value>
+    <value type="bool" key="Analyzer.Valgrind.FilterExternalIssues">true</value>
+    <value type="int" key="Analyzer.Valgrind.LeakCheckOnFinish">1</value>
+    <value type="int" key="Analyzer.Valgrind.NumCallers">25</value>
+    <valuelist type="QVariantList" key="Analyzer.Valgrind.RemovedSuppressionFiles"/>
+    <value type="int" key="Analyzer.Valgrind.SelfModifyingCodeDetection">1</value>
+    <value type="bool" key="Analyzer.Valgrind.Settings.UseGlobalSettings">true</value>
+    <value type="bool" key="Analyzer.Valgrind.ShowReachable">false</value>
+    <value type="bool" key="Analyzer.Valgrind.TrackOrigins">true</value>
+    <value type="QString" key="Analyzer.Valgrind.ValgrindExecutable">valgrind</value>
+    <valuelist type="QVariantList" key="Analyzer.Valgrind.VisibleErrorKinds">
+     <value type="int">0</value>
+     <value type="int">1</value>
+     <value type="int">2</value>
+     <value type="int">3</value>
+     <value type="int">4</value>
+     <value type="int">5</value>
+     <value type="int">6</value>
+     <value type="int">7</value>
+     <value type="int">8</value>
+     <value type="int">9</value>
+     <value type="int">10</value>
+     <value type="int">11</value>
+     <value type="int">12</value>
+     <value type="int">13</value>
+     <value type="int">14</value>
+    </valuelist>
+    <value type="int" key="PE.EnvironmentAspect.Base">2</value>
+    <valuelist type="QVariantList" key="PE.EnvironmentAspect.Changes"/>
+    <value type="QString" key="ProjectExplorer.CustomExecutableRunConfiguration.Arguments"></value>
+    <value type="QString" key="ProjectExplorer.CustomExecutableRunConfiguration.Executable">E:/Documents/codeFiles/_out/gomoku</value>
+    <value type="QString" key="ProjectExplorer.CustomExecutableRunConfiguration.WorkingDirectory">%{buildDir}</value>
+    <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">Run E:\Documents\codeFiles\_out\gomoku</value>
+    <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName"></value>
+    <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">ProjectExplorer.CustomExecutableRunConfiguration</value>
+    <value type="uint" key="RunConfiguration.QmlDebugServerPort">3768</value>
+    <value type="bool" key="RunConfiguration.UseCppDebugger">false</value>
+    <value type="bool" key="RunConfiguration.UseCppDebuggerAuto">true</value>
+    <value type="bool" key="RunConfiguration.UseMultiProcess">false</value>
+    <value type="bool" key="RunConfiguration.UseQmlDebugger">false</value>
+    <value type="bool" key="RunConfiguration.UseQmlDebuggerAuto">true</value>
+   </valuemap>
+   <value type="int" key="ProjectExplorer.Target.RunConfigurationCount">2</value>
+  </valuemap>
+ </data>
+ <data>
+  <variable>ProjectExplorer.Project.TargetCount</variable>
+  <value type="int">1</value>
+ </data>
+ <data>
+  <variable>ProjectExplorer.Project.Updater.FileVersion</variable>
+  <value type="int">18</value>
+ </data>
+ <data>
+  <variable>Version</variable>
+  <value type="int">18</value>
+ </data>
+</qtcreator>
diff --git a/history.cpp b/history.cpp
index cfad1b0..edf768e 100644
--- a/history.cpp
+++ b/history.cpp
@@ -6,9 +6,28 @@ History::History(QWidget *parent) :
     ui(new Ui::History)
 {
     ui->setupUi(this);
+    this->setWindowTitle("History");
 }
 
 History::~History()
 {
     delete ui;
 }
+
+
+
+
+
+void History::on_pushButton_clicked()
+{
+    class HistoryBoard *w = new class HistoryBoard;
+    QDesktopWidget dw;
+//    int x= dw.width()*VIEW_VOL;
+//    int y=dw.height()*VIEW_VOL;
+    int x= 2600*VIEW_VOL;
+    int y= 1800*VIEW_VOL;
+    w->setFixedSize(x,y);
+    w->RESTART_SEEK=0;
+    w->show();
+    this->hide();
+}
diff --git a/history.h b/history.h
index c46003c..c6b0dd3 100644
--- a/history.h
+++ b/history.h
@@ -2,6 +2,7 @@
 #define HISTORY_H
 
 #include <QWidget>
+#include "historyboard.h"
 
 namespace Ui {
 class History;
@@ -9,12 +10,21 @@ class History;
 
 class History : public QWidget
 {
+
     Q_OBJECT
 
 public:
     explicit History(QWidget *parent = 0);
     ~History();
 
+
+protected:
+
+
+
+private slots:
+    void on_pushButton_clicked();
+
 private:
     Ui::History *ui;
 };
diff --git a/history.ui b/history.ui
index 897ca6e..b993507 100644
--- a/history.ui
+++ b/history.ui
@@ -1,21 +1,53 @@
+<?xml version="1.0" encoding="UTF-8"?>
 <ui version="4.0">
- <author/>
- <comment/>
- <exportmacro/>
  <class>History</class>
- <widget name="History" class="QWidget">
+ <widget class="QWidget" name="History">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
-    <width>400</width>
-    <height>300</height>
+    <width>542</width>
+    <height>389</height>
    </rect>
   </property>
   <property name="windowTitle">
    <string>Form</string>
   </property>
+  <widget class="QWidget" name="verticalLayoutWidget">
+   <property name="geometry">
+    <rect>
+     <x>0</x>
+     <y>0</y>
+     <width>551</width>
+     <height>391</height>
+    </rect>
+   </property>
+   <layout class="QVBoxLayout" name="verticalLayout">
+    <item>
+     <widget class="QLabel" name="label">
+      <property name="styleSheet">
+       <string notr="true">background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(157,105,59,125), stop:1 rgba(255, 255, 255, 125));
+font: 75 12pt &quot;Arial&quot;;
+</string>
+      </property>
+      <property name="text">
+       <string>HISTORY</string>
+      </property>
+     </widget>
+    </item>
+    <item>
+     <widget class="QPushButton" name="pushButton">
+      <property name="text">
+       <string>PushButton</string>
+      </property>
+     </widget>
+    </item>
+    <item>
+     <widget class="QListView" name="listView"/>
+    </item>
+   </layout>
+  </widget>
  </widget>
- <pixmapfunction/>
+ <resources/>
  <connections/>
 </ui>
diff --git a/historyboard.cpp b/historyboard.cpp
index c55fb9c..ef43055 100644
--- a/historyboard.cpp
+++ b/historyboard.cpp
@@ -6,9 +6,192 @@ HistoryBoard::HistoryBoard(QWidget *parent) :
     ui(new Ui::HistoryBoard)
 {
     ui->setupUi(this);
+
+    initboard();
+
+    Timer = new QTimer(this);
+    // 设置定时间隔
+    Timer->setInterval(300);
+    connect(Timer, SIGNAL(timeout()), this, SLOT(readCSV()));
+    // 启动定时器
+//    record = (RECORDS*)malloc(sizeof(RECORDS));
+//    HEAD = record;
+    Timer->start();
+
 }
 
 HistoryBoard::~HistoryBoard()
 {
     delete ui;
 }
+
+void HistoryBoard::readCSV(){
+
+    QFile goData("gameRecord.csv");
+    goData.open(QIODevice::ReadOnly);
+    QString line;
+    goData.seek(i);
+    line = goData.readLine();
+    i+=line.length();
+
+    QStringList lines =line.split(",");
+    int temp;
+    int tempNum=3;
+            foreach (QString s, lines)
+            {
+                temp=s.toInt();
+                if(tempCount>0){
+                    tempCount--;
+                }
+                else {
+                    qDebug() << temp;
+                    if(tempNum == 3){
+                        RECORD_PLAYER = temp;
+//                        qDebug() << "!!!!" << RECORD_PLAYER;
+                    }
+                    else if(tempNum ==2){
+                        RECORD_X = temp;
+                    }
+                    else{
+                        RECORD_Y = temp;
+                    }
+                    tempNum -=1;
+                }
+            }
+
+
+
+    if (goData.read(2)==QString("->")){
+            Timer->stop();
+            qDebug("Oh!!!!");
+//            for(;HEAD->next != NULL;HEAD=HEAD->next){
+//                qDebug("%d,%d,%d",HEAD->player,HEAD->x,HEAD->y);
+//                board[HEAD->x][HEAD->y]=HEAD->player;
+//                this->update();
+//            }
+        }
+
+    if(tempCount>0){}
+    else {
+
+        board[RECORD_X+3][RECORD_Y+3]=RECORD_PLAYER;
+        orderBoard[RECORD_X+3][RECORD_Y+3]=count;
+        count++;
+        this->update();
+    }
+//            record->next =(RECORDS*)malloc(sizeof(RECORDS));
+//            record = record->next;
+//            record->next =NULL;
+
+
+    goData.close();
+}
+
+void HistoryBoard::paintEvent(QPaintEvent *)
+{
+    QPainter painter(this);
+    painter.setRenderHint(QPainter::Antialiasing, true);
+    QPen pen;
+    pen.setColor(QColor(100,149,237));
+    QBrush brush(QColor(237,209,216));
+    brush.setStyle(Qt::HorPattern);
+    painter.setPen(pen);
+    painter.setBrush(brush);
+
+    for(int i = 0; i <= COL+1;i++){
+
+    painter.drawLine(QPointF(EDGE,i*BLOCK_SIZE+EDGE),
+                     QPointF(LENGTH+EDGE,i*BLOCK_SIZE+EDGE));
+    painter.drawLine(QPointF(i*BLOCK_SIZE+EDGE,EDGE),
+                     QPointF(i*BLOCK_SIZE+EDGE,EDGE+LENGTH));
+    }
+
+
+    QRectF rect(3*EDGE + COL*(BLOCK_SIZE+2),EDGE, 300, 200);
+    painter.drawRect(rect);  //绘制个矩形
+//    if(gamemode == started){
+//        QString str = (player == playerblack)?QString("\nproject\ngomoku\nBlack Go!"):QString("\nproject\ngomoku\nWhite Go!");
+//        painter.drawText(rect, Qt::AlignHCenter,str);
+//    }
+//    else {
+        QFont font=QFont("Arial Black", 15, QFont::Bold, false);
+        painter.setFont(font);
+//        if(player == playerwhite){painter.setPen(QColor(47,47,47));}
+        /*else{*/painter.setPen(QColor(91,165,133));/*}*/
+        QString str = /*(player == playerwhite)?*/QString("\nP-Black\nWin!")/*:QString("\nP-White\nWin!")*/;
+        painter.drawText(rect, Qt::AlignHCenter, str);
+//    }
+
+
+
+    // 棋盘提示点
+
+    painter.setPen(QColor(100,149,237));     //画提示点
+    painter.setBrush(QColor(100,149,237));
+    painter.drawEllipse(EDGE+5*BLOCK_SIZE-GO_SIZE/3,
+                        EDGE +5*BLOCK_SIZE-GO_SIZE/3,
+                        GO_SIZE/3*2,GO_SIZE/3*2);
+    painter.drawEllipse(EDGE+11*BLOCK_SIZE-GO_SIZE/3,
+                        EDGE +5*BLOCK_SIZE-GO_SIZE/3,
+                        GO_SIZE/3*2,GO_SIZE/3*2);
+    painter.drawEllipse(EDGE+5*BLOCK_SIZE-GO_SIZE/3,
+                        EDGE +11*BLOCK_SIZE-GO_SIZE/3,
+                        GO_SIZE/3*2,GO_SIZE/3*2);
+    painter.drawEllipse(EDGE+11*BLOCK_SIZE-GO_SIZE/3,
+                        EDGE +11*BLOCK_SIZE-GO_SIZE/3,
+                        GO_SIZE/3*2,GO_SIZE/3*2);
+    painter.drawEllipse(EDGE+8*BLOCK_SIZE-GO_SIZE/3,
+                        EDGE +8*BLOCK_SIZE-GO_SIZE/3,
+                        GO_SIZE/3*2,GO_SIZE/3*2);
+
+    QString order;
+    for(int i =1; i <COL+1;i++){
+        for(int j =1;j<COL+1;j++){
+            if(board[i+3][j+3]==1){
+                painter.setPen(QColor(82,149,120));     //画白点
+                painter.setBrush(QColor(91,165,133));
+                painter.drawEllipse(EDGE+i*BLOCK_SIZE-GO_SIZE,
+                                    EDGE +j*BLOCK_SIZE-GO_SIZE,
+                                    2*GO_SIZE,2*GO_SIZE);
+
+            }
+            else if(board[i+3][j+3]==2){
+                painter.setPen(QColor(42,42,42));     //画黑点
+                painter.setBrush(QColor(47,47,47));
+                painter.drawEllipse(EDGE+i*BLOCK_SIZE-GO_SIZE,
+                                    EDGE +j*BLOCK_SIZE-GO_SIZE,
+                                    2*GO_SIZE,2*GO_SIZE);
+            }
+            if(orderBoard[i+3][j+3]==0){}
+            else {
+                // 棋子的序号
+                painter.setPen(QColor(Qt::white));
+                QFont font2=QFont("Arial Black",8, QFont::Bold, false);
+                painter.setFont(font2);
+                order =QString("%1").arg(orderBoard[i+3][j+3]);
+                QRectF rect2(EDGE+i*BLOCK_SIZE-3*GO_SIZE/2,
+                             EDGE +j*BLOCK_SIZE-GO_SIZE,GO_SIZE*3,GO_SIZE*3);
+                painter.drawText(rect2, Qt::AlignHCenter,order);
+            }
+        }
+    }
+}
+
+void HistoryBoard::on_pushButton_clicked()
+{
+    initboard();
+    Timer->start();
+}
+
+void HistoryBoard::initboard(){
+
+    count =0;
+    for(int i =0;i<COL+8;i++){
+        for(int j=0;j<COL+8;j++){
+            board[i][j]=0;
+            orderBoard[i][j]=0;
+        }
+    }
+    tempCount = TEMPCOUNT;
+    i = RESTART_SEEK;
+}
diff --git a/historyboard.h b/historyboard.h
index 9fe3ca5..350c655 100644
--- a/historyboard.h
+++ b/historyboard.h
@@ -2,6 +2,7 @@
 #define HISTORYBOARD_H
 
 #include <QWidget>
+#include "gameset.h"
 
 namespace Ui {
 class HistoryBoard;
@@ -14,9 +15,31 @@ class HistoryBoard : public QWidget
 public:
     explicit HistoryBoard(QWidget *parent = 0);
     ~HistoryBoard();
+    void initboard();
+    int RESTART_SEEK=0;
+
 
 private:
     Ui::HistoryBoard *ui;
+    int i =RESTART_SEEK;
+    int TEMPCOUNT=4;
+    int tempCount=TEMPCOUNT;
+    int count =0;
+
+private slots:
+    void readCSV();
+
+    void on_pushButton_clicked();
+
+protected:
+    void paintEvent(QPaintEvent*);
+    int board[COL+8][COL+8];
+    int orderBoard[COL+8][COL+8];
+    QTimer *Timer;
+    int RECORD_X=0,RECORD_Y=0,RECORD_PLAYER=0;
+//    RECORDS *HEAD;
+//    RECORDS *record;
+
 };
 
 #endif // HISTORYBOARD_H
diff --git a/historyboard.ui b/historyboard.ui
index 69b05b5..7e073ab 100644
--- a/historyboard.ui
+++ b/historyboard.ui
@@ -1,21 +1,38 @@
+<?xml version="1.0" encoding="UTF-8"?>
 <ui version="4.0">
- <author/>
- <comment/>
- <exportmacro/>
  <class>HistoryBoard</class>
  <widget class="QWidget" name="HistoryBoard">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
-    <width>400</width>
-    <height>300</height>
+    <width>891</width>
+    <height>479</height>
    </rect>
   </property>
   <property name="windowTitle">
    <string>Form</string>
   </property>
+  <widget class="QWidget" name="verticalLayoutWidget">
+   <property name="geometry">
+    <rect>
+     <x>670</x>
+     <y>360</y>
+     <width>201</width>
+     <height>101</height>
+    </rect>
+   </property>
+   <layout class="QVBoxLayout" name="verticalLayout">
+    <item>
+     <widget class="QPushButton" name="pushButton">
+      <property name="text">
+       <string>Restart</string>
+      </property>
+     </widget>
+    </item>
+   </layout>
+  </widget>
  </widget>
- <pixmapfunction/>
+ <resources/>
  <connections/>
 </ui>
diff --git a/icon.qrc b/icon.qrc
index 3fd215d..265e662 100644
--- a/icon.qrc
+++ b/icon.qrc
@@ -1 +1,11 @@
-<RCC/>
+<RCC>
+    <qresource prefix="/image">
+        <file>icon/favicon.ico</file>
+        <file>icon/favicon.png</file>
+        <file>icon/miku1.gif</file>
+        <file>icon/miku2.gif</file>
+        <file>icon/bak.png</file>
+        <file>icon/favicon2.png</file>
+    </qresource>
+    <qresource prefix="/data"/>
+</RCC>
diff --git a/icon/IMG_20221007_134116.jpg b/icon/IMG_20221007_134116.jpg
new file mode 100644
index 0000000..a5f0fa0
Binary files /dev/null and b/icon/IMG_20221007_134116.jpg differ
diff --git a/icon/IMG_20221007_134116.png b/icon/IMG_20221007_134116.png
deleted file mode 100644
index 10935a5..0000000
Binary files a/icon/IMG_20221007_134116.png and /dev/null differ
diff --git a/icon/favicon2.ico b/icon/favicon2.ico
new file mode 100644
index 0000000..7dde498
Binary files /dev/null and b/icon/favicon2.ico differ
diff --git a/logo.rc b/logo.rc
index e69de29..36f0681 100644
--- a/logo.rc
+++ b/logo.rc
@@ -0,0 +1 @@
+IDI_ICON1 ICON DISCARDABLE "favicon2.ico"
diff --git a/main.cpp b/main.cpp
new file mode 100644
index 0000000..c71796e
--- /dev/null
+++ b/main.cpp
@@ -0,0 +1,11 @@
+#include <QApplication>
+#include <QMainWindow>
+#include "start.h"
+
+int main(int argc, char *argv[])
+{
+    QApplication a(argc, argv);
+    start w;
+    w.show();
+    return a.exec();
+}
diff --git a/mainwindow.cpp b/mainwindow.cpp
new file mode 100644
index 0000000..2219c57
--- /dev/null
+++ b/mainwindow.cpp
@@ -0,0 +1,1039 @@
+#include "mainwindow.h"
+#include "ui_mainwindow.h"
+
+
+MainWindow::MainWindow(QWidget *parent) :
+    QMainWindow(parent),
+    ui(new Ui::MainWindow)
+{
+    ui->setupUi(this);
+//    QFont ft;
+    this->setWindowTitle("Gomoku !");
+    this->setWindowIcon(QIcon(":image/icon/favicon2.png"));
+    timeClock();
+    gametype = start::gametype;
+//    qDebug() << start::gametype;
+    initgame();
+
+//    qDebug() << start::gametype;
+
+}
+
+MainWindow::~MainWindow()
+{
+    delete ui;
+}
+
+
+
+void MainWindow::initgame(){
+
+    first_go_done = false;
+
+    if(gametype==EVE){
+        setMouseTracking(false);
+    }
+    else{
+        setMouseTracking(true);
+    }
+
+    for(int i=0;i<COL+8;i++){
+        for(int j=0;j<COL+8;j++){
+            board[i][j]=0;
+        }
+    }
+
+    step_count=0;
+    this->ui->stepClock->display(step_count);
+    this->ui->LastStep->setPlainText("");
+
+        HEAD = (RECORDS*)malloc(sizeof(RECORDS));
+        HEAD->x = -1;
+        HEAD->y = -1;
+        record = (RECORDS*)malloc(sizeof(RECORDS));
+        HEAD->next = record;
+        record_p = HEAD->next;
+        record_p->next = NULL;
+
+
+    gamemode = started;
+    player = playerblack;
+    update();
+    if(gametype==EVE){
+    Timer = new QTimer;
+    // eveTimer
+    Timer->setInterval(500);
+    QObject::connect(Timer,&QTimer::timeout,this,&MainWindow::eveCpuGo);
+        Timer->start();
+    }
+    else if(gametype==PVE2||gametype==PVE){
+        Timer = new QTimer;
+        // PVETimer
+        Timer->setInterval(500);
+        QObject::connect(Timer,&QTimer::timeout,this,&MainWindow::pveCpuGo);
+        if(gametype==PVE2&&first_go_done==false){
+            pveCpuGo();
+        }else{}
+
+    }
+}
+
+void MainWindow::paintEvent(QPaintEvent *)
+{
+    QPainter painter(this);
+    painter.setRenderHint(QPainter::Antialiasing, true);
+
+//    QPixmap pix;
+//    pix.load(":image/icon/bak.png");
+//    painter.drawPixmap(0, 0, 600, 400, pix);
+
+    QPen pen;
+    pen.setColor(QColor(100,149,237));
+
+//    QBrush brush(QColor(0,155,125));
+    QBrush brush(QColor(237,209,216));
+    brush.setStyle(Qt::HorPattern);
+    painter.setPen(pen);
+    painter.setBrush(brush);
+//    painter.drawRect(50,50,200,100);
+
+
+    for(int i = 0; i <= COL+1;i++){
+
+    painter.drawLine(QPointF(EDGE,i*BLOCK_SIZE+EDGE),
+                     QPointF(LENGTH+EDGE,i*BLOCK_SIZE+EDGE));
+    painter.drawLine(QPointF(i*BLOCK_SIZE+EDGE,EDGE),
+                     QPointF(i*BLOCK_SIZE+EDGE,EDGE+LENGTH));
+    }
+
+
+    QRectF rect(3*EDGE + COL*(BLOCK_SIZE+2),EDGE, 300, 200);
+    painter.drawRect(rect);  //绘制个矩形
+    painter.setPen(QColor(Qt::black));
+    QFont font("宋体", 15, QFont::Bold, false);   //字体，大小，粗体，斜体
+    font.setCapitalization(QFont::Capitalize);   //设置字母大小写
+    painter.setFont(font);
+    if(gamemode == started){
+        QString str = (player == playerblack)?QString("\nproject\ngomoku\nBlack Go!"):QString("\nproject\ngomoku\nWhite Go!");
+        painter.drawText(rect, Qt::AlignHCenter,str);
+    }
+    else {
+        QFont font("Arial Black", 15, QFont::Bold, false);
+        painter.setFont(font);
+        if(player == playerwhite){painter.setPen(QColor(47,47,47));}
+        else{painter.setPen(QColor(91,165,133));}
+        QString str = (player == playerwhite)?QString("\nP-Black\nWin!"):QString("\nP-White\nWin!");
+        painter.drawText(rect, Qt::AlignHCenter, str);
+    }
+
+
+
+    // 棋盘提示点
+
+    painter.setPen(QColor(100,149,237));     //画提示点
+    painter.setBrush(QColor(100,149,237));
+    painter.drawEllipse(EDGE+5*BLOCK_SIZE-GO_SIZE/3,
+                        EDGE +5*BLOCK_SIZE-GO_SIZE/3,
+                        GO_SIZE/3*2,GO_SIZE/3*2);
+    painter.drawEllipse(EDGE+11*BLOCK_SIZE-GO_SIZE/3,
+                        EDGE +5*BLOCK_SIZE-GO_SIZE/3,
+                        GO_SIZE/3*2,GO_SIZE/3*2);
+    painter.drawEllipse(EDGE+5*BLOCK_SIZE-GO_SIZE/3,
+                        EDGE +11*BLOCK_SIZE-GO_SIZE/3,
+                        GO_SIZE/3*2,GO_SIZE/3*2);
+    painter.drawEllipse(EDGE+11*BLOCK_SIZE-GO_SIZE/3,
+                        EDGE +11*BLOCK_SIZE-GO_SIZE/3,
+                        GO_SIZE/3*2,GO_SIZE/3*2);
+    painter.drawEllipse(EDGE+8*BLOCK_SIZE-GO_SIZE/3,
+                        EDGE +8*BLOCK_SIZE-GO_SIZE/3,
+                        GO_SIZE/3*2,GO_SIZE/3*2);
+
+//    QPixmap pix;
+//    pix.load(":image/icon/bak.png");
+//    painter.drawPixmap(3*EDGE + COL*(BLOCK_SIZE+2),EDGE, 600, 400, pix);
+
+
+    for(int i =1; i <COL+1;i++){
+        for(int j =1;j<COL+1;j++){
+            if(board[i+3][j+3]==1){
+                painter.setPen(QColor(82,149,120));     //画白点
+                painter.setBrush(QColor(91,165,133));
+                painter.drawEllipse(EDGE+i*BLOCK_SIZE-GO_SIZE,
+                                    EDGE +j*BLOCK_SIZE-GO_SIZE,
+                                    2*GO_SIZE,2*GO_SIZE);
+            
+            }
+            else if(board[i+3][j+3]==2){
+                painter.setPen(QColor(42,42,42));     //画黑点
+                painter.setBrush(QColor(47,47,47));
+                painter.drawEllipse(EDGE+i*BLOCK_SIZE-GO_SIZE,
+                                    EDGE +j*BLOCK_SIZE-GO_SIZE,
+                                    2*GO_SIZE,2*GO_SIZE);
+            }
+            else if (board[i+3][j+3]>=3) {// 胜利点
+
+                if(board[i+3][j+3]==3){
+                    painter.setPen(QColor(82,149,120));     //画白点
+                    painter.setBrush(QColor(91,165,133));
+                    painter.drawEllipse(EDGE+i*BLOCK_SIZE-GO_SIZE,
+                                        EDGE +j*BLOCK_SIZE-GO_SIZE,
+                                        2*GO_SIZE,2*GO_SIZE);
+                }
+                else{
+                    painter.setPen(QColor(42,42,42));     //画黑点
+                    painter.setBrush(QColor(47,47,47));
+                    painter.drawEllipse(EDGE+i*BLOCK_SIZE-GO_SIZE,
+                                        EDGE +j*BLOCK_SIZE-GO_SIZE,
+                                        2*GO_SIZE,2*GO_SIZE);
+                }
+                // 胜利点 画星星(删掉) 太难了还是画方框吧
+                // 方框太丑，还是画个叉号吧
+
+                painter.setPen(QPen(Qt::white,5));
+//                painter.setBrush(Qt::white);
+//                brush.setStyle(Qt::SolidPattern);
+//                QRectF rect(EDGE+i*BLOCK_SIZE-GO_SIZE/2,
+//                           EDGE +j*BLOCK_SIZE-GO_SIZE/2,GO_SIZE,GO_SIZE);
+//                painter.drawRect(rect);
+//                painter.drawEllipse(EDGE+i*BLOCK_SIZE-GO_SIZE/2,
+//                                    EDGE +j*BLOCK_SIZE-GO_SIZE/2,
+//                                    GO_SIZE,GO_SIZE);
+                //绘制左上线
+                painter.drawLine(EDGE+i*BLOCK_SIZE-GO_SIZE/2,EDGE +j*BLOCK_SIZE-GO_SIZE/2,
+                                 EDGE+i*BLOCK_SIZE+GO_SIZE/2,EDGE +j*BLOCK_SIZE+GO_SIZE/2);
+                //绘制右下线
+                painter.drawLine(EDGE+i*BLOCK_SIZE-GO_SIZE/2,EDGE +j*BLOCK_SIZE+GO_SIZE/2,
+                                 EDGE+i*BLOCK_SIZE+GO_SIZE/2,EDGE +j*BLOCK_SIZE-GO_SIZE/2);
+
+            }
+
+
+        }    
+    }
+
+    if(player == playerblack){
+        painter.setPen(QColor(42,42,42));     //画黑点
+        painter.setBrush(QColor(47,47,47));}
+    else{
+            painter.setPen(QColor(82,149,120));     //画白点
+            painter.setBrush(QColor(91,165,133));
+        }
+
+    if(board[mouseX+3][mouseY+3]==0){
+    painter.drawEllipse(EDGE+mouseX*BLOCK_SIZE-GO_SIZE,
+                        EDGE +mouseY*BLOCK_SIZE-GO_SIZE,
+                        2*GO_SIZE,2*GO_SIZE);
+    //绘制 十字准星
+    pen.setColor(Qt::white);
+    painter.setPen(pen);
+    //绘制横向线
+    painter.drawLine(EDGE+mouseX*BLOCK_SIZE-GO_SIZE/2,EDGE +mouseY*BLOCK_SIZE,EDGE+mouseX*BLOCK_SIZE+GO_SIZE/2,EDGE +mouseY*BLOCK_SIZE);
+    //绘制纵向线
+    painter.drawLine(EDGE+mouseX*BLOCK_SIZE,EDGE +mouseY*BLOCK_SIZE-GO_SIZE/2,EDGE+mouseX*BLOCK_SIZE,EDGE +mouseY*BLOCK_SIZE+GO_SIZE/2);
+
+    }
+
+}
+
+
+void MainWindow::mouseMoveEvent(QMouseEvent *event)    //鼠标移动事件
+{
+//   setMouseTracking(true);
+//    qDebug("121421");
+
+   int x=event->x();   //鼠标移动时的坐标值
+   int y=event->y();
+   if(gamemode ==started&& x>=EDGE+BLOCK_SIZE&&x<=EDGE +(COL) * BLOCK_SIZE
+           &&y>=EDGE+BLOCK_SIZE&&y<=(COL)* BLOCK_SIZE+EDGE)  //保证棋子落在棋盘内部，在外部的无效
+   {
+        mouseX = (x-EDGE/2)/BLOCK_SIZE;
+        mouseY = (y-EDGE/2)/BLOCK_SIZE;
+//        qDebug("move: %d %d , t: %d %d",mouseX,mouseY,event->x(),event->y());
+//        qDebug("board: %d %d -> %d",mouseX,mouseY,board[mouseX+3][mouseY+3]);
+
+
+    update();//更新整个界面，（为显示新的棋子的图像）
+
+   }
+   else
+   {
+       mouseX=-1;
+       mouseY=-1;
+   }
+
+}
+
+void MainWindow::mouseReleaseEvent(QMouseEvent *event){
+
+    if(gametype==EVE){
+    }
+    else{
+        int x = event->x();
+        int y = event->y();
+        if(gamemode ==started&&PVE_ON_P==true&&x>=EDGE+BLOCK_SIZE &&x<=EDGE +(COL) * BLOCK_SIZE
+                &&y>=EDGE+BLOCK_SIZE&&y<=(COL) * BLOCK_SIZE+EDGE)  //保证棋子落在棋盘内部，在外部的无效
+        {
+            int chessx =((x-EDGE/2)/BLOCK_SIZE)+3;
+            int chessy =((y-EDGE/2)/BLOCK_SIZE)+3;
+            if(board[chessx][chessy] == 0 // 判定位置是否为空
+                    && chessx >=4
+                    && chessx <= COL +4
+                    && chessy >=4
+                    && chessy <= COL+4)
+            {
+                if(player == playerblack){
+                    board[chessx][chessy] = 2;
+                }
+                else{
+                    board[chessx][chessy] = 1;
+                }
+                qDebug("release: %d %d , t: %d %d",chessx,chessy,event->x(),event->y());
+                afterGo(chessx,chessy);
+                first_go_done = true;
+                player = (player==playerblack)?playerwhite:playerblack;
+
+                if(gametype == PVE || gametype==PVE2){
+                    PVE_ON_P=false;
+                    setMouseTracking(false);
+                    Timer->start();
+                }
+                else{
+                }
+
+            }
+            else{}
+        }
+        else
+        {
+            mouseX=-1;
+            mouseY=-1;
+        }
+
+    }
+}
+
+
+void MainWindow::afterGo(int chessX,int chessY){
+    update();//更新整个界面，（为显示新的棋子的图像）
+    step_count++; // 步数加一
+    stepRecord(chessX,chessY);
+
+//        qDebug("%d",HEAD->next->go_place);
+    this->ui->LastStep->setPlainText("");
+    QString onHands;
+    while (record_p->next != NULL)
+    {
+        onHands=(record_p->player==1)?QString("Black"):QString("White");
+        QString str = QString("step %1 %2:%3,%4")
+                .arg((int)(record_p->count),0,10)
+                .arg(onHands)
+                .arg(record_p->x)
+                .arg(record_p->y);
+        this->ui->LastStep->appendPlainText(str);
+
+//            qDebug("%d:%d,%d",record_p->count,(record_p->go_place)/COL,(record_p->go_place)%COL);
+        record_p = record_p->next;
+    }
+    record_p = HEAD->next;
+
+
+    this->ui->stepClock->display(step_count);
+
+    if(judge(chessX,chessY)==0){
+    }
+    else {
+        writeCSV();
+        gameover *dlg = new gameover(this);
+        connect(dlg,&gameover::accepted,this,&MainWindow::initgame);
+        if(gametype==EVE){
+            Timer->stop();
+        }
+        else {}
+
+
+
+        dlg->setGeometry(this->x()+(this->width() - dlg->width()-GO_SIZE),
+        this->y()+(this->height() - dlg->height())/2+8*GO_SIZE,dlg->width(),dlg->height());
+        //            mainWindow.y()+(mainWindow.heigh()-dialog.height())/2, 200, 150);
+        update();
+        dlg->show();
+
+    }
+
+
+
+}
+
+
+
+int MainWindow::judge(int x,int y){
+        // 纵向
+    int handOn;
+    if(player == playerwhite){
+    handOn =1;}
+    else{
+        handOn=2;
+    }
+
+        for (int i = x-4; i <= x+4; i++)
+        {
+            if (
+                board[i][y] == handOn
+                &&board[i+1][y]== handOn
+                &&board[i+2][y]== handOn
+                &&board[i+3][y]== handOn
+                &&board[i+4][y]== handOn
+                )
+            {gamemode = unstarted;
+                board[i][y] = handOn+2;
+                board[i+1][y]= handOn+2;
+                board[i+2][y]= handOn+2;
+                board[i+3][y]= handOn+2;
+                board[i+4][y]= handOn+2;
+                return 1;}
+        }
+
+        // 横向
+            for (int i = y-4; i <= y+4; i++)
+        {
+            if (
+                board[x][i]== handOn
+                &&board[x][i+1]== handOn
+                &&board[x][i+2]== handOn
+                &&board[x][i+3]== handOn
+                &&board[x][i+4]== handOn
+                )
+            {gamemode = unstarted;
+                board[x][i]= handOn+2;
+                board[x][i+1]= handOn+2;
+                board[x][i+2]= handOn+2;
+                board[x][i+3]= handOn+2;
+                board[x][i+4]= handOn+2;
+                return 1;}
+        }
+
+        // 左斜
+            for (int i = x-4,j=y+4; i <= x+4; i++,j--)
+        {
+            if (
+                board[i][j]== handOn
+                &&board[i+1][j-1]== handOn
+                &&board[i+2][j-2]== handOn
+                &&board[i+3][j-3]== handOn
+                &&board[i+4][j-4]== handOn
+                )
+            {
+
+                gamemode = unstarted;
+                board[i][j]= handOn+2;
+                board[i+1][j-1]= handOn+2;
+                board[i+2][j-2]= handOn+2;
+                board[i+3][j-3]= handOn+2;
+                board[i+4][j-4]= handOn+2;
+                return 1;}
+        }
+
+        //右斜
+            for (int i = x-4,j = y-4; i <= x+4; i++,j++)
+        {
+            if (
+                board[i][j]== handOn
+                &&board[i+1][j+1]== handOn
+                &&board[i+2][j+2]== handOn
+                &&board[i+3][j+3]== handOn
+                &&board[i+4][j+4]== handOn
+                )
+            {gamemode = unstarted;
+                board[i][j]= handOn+2;
+                board[i+1][j+1]= handOn+2;
+                board[i+2][j+2]= handOn+2;
+                board[i+3][j+3]= handOn+2;
+                board[i+4][j+4]= handOn+2;
+                return 1;}
+
+        }
+
+
+        return 0;
+
+}
+
+void MainWindow::cpuGo(){
+    int handOn = (player==playerblack)?2:1;
+
+    if(gamemode==started){
+        if((gametype== PVE2||gametype== EVE)&&first_go_done == false){
+            board[3+COL/2+1][3+COL/2+1] = handOn;
+            afterGo(3+COL/2+1,3+COL/2+1);
+        }
+        else{
+        GOS goMax,goP;
+        goMax.score=0;
+        for(int i =4;i<COL+4;i++){
+            for(int j =4;j< COL+4;j++){
+                goP.X = i;
+                goP.Y = j;
+                goP.score=score(i,j);
+//                qDebug("goP:%d,%d,%d",goP.X-3,goP.Y-3,goP.score);
+                goMax = (goP.score>goMax.score)?goP:goMax;
+            }
+        }
+//        qDebug("goMax:%d,%d,%d",goMax.X,goMax.Y,goMax.score);
+
+        board[goMax.X][goMax.Y] = handOn;
+        afterGo(goMax.X,goMax.Y);
+
+        player = (player==playerblack)?playerwhite:playerblack;
+
+    }
+
+    first_go_done = true;
+    }
+}
+
+void MainWindow::cpuGo2(){
+    int handOn = (player==playerblack)?2:1;
+
+    if(gamemode==started){
+        if((gametype== PVE2||gametype== EVE)&&first_go_done == false){
+            board[3+COL/2+1][3+COL/2+1] = handOn;
+            afterGo(3+COL/2+1,3+COL/2+1);
+        }
+        else{
+            GOS Best_Attack;  // 最佳进攻位
+            GOS Best_Defend;  // 最佳防守位
+            Best_Attack.score = 0;  // 进攻策略 最高权重
+            Best_Defend.score = 0;  // 防守策略 最高权重
+            Best_Attack.X=0;Best_Attack.Y=0;Best_Defend.X=0;Best_Defend.Y=0;
+            // 最佳进攻
+            for (int i = 4; i < COL+4; i++){
+                for (int j = 4; j < COL+4; j++){
+                    if(board[i][j] != 0)
+                        continue;
+                    int value = score2(i,j,handOn);// 1 是 AI
+                    Best_Attack.score = (Best_Attack.score>value)?Best_Attack.score:value;
+                    Best_Attack.X = (Best_Attack.score>value)?Best_Attack.X:i;
+                    Best_Attack.Y = (Best_Attack.score>value)?Best_Attack.Y:j;
+                }
+            }
+
+            // 最佳防守
+            for (int i = 4; i < COL+4; i++){
+                for (int j = 4; j < COL+4; j++){
+                    if(board[i][j] != 0)
+                        continue;
+                    int value = score2(i,j,3-handOn);// 1 是 AI
+                    Best_Defend.score = (Best_Defend.score>value)?Best_Defend.score:value;
+                    Best_Defend.X = (Best_Defend.score>value)?Best_Defend.X:i;
+                    Best_Defend.Y = (Best_Defend.score>value)?Best_Defend.Y:j;
+                }
+            }
+            // 选择 防守 || 进攻
+            if(Best_Attack.score >= Best_Defend.score){  // 进攻 优先
+                board[Best_Attack.X][Best_Attack.Y] = handOn;
+                afterGo(Best_Attack.X,Best_Attack.Y);
+            }
+            else{ // 防守
+                board[Best_Defend.X][Best_Defend.Y] = handOn;
+                afterGo(Best_Defend.X,Best_Defend.Y);
+            }
+
+
+        }
+        player = (player==playerblack)?playerwhite:playerblack;
+
+    }
+
+
+
+    first_go_done = true;
+    }
+
+
+int MainWindow::score2(int x,int y,int me) {
+//        int me =(player==playerblack)?2:1;// me 作为参数是有必要的
+        int value = 0;
+        int rival = 3-me; // 对手
+
+        int empty = 0;   // 无棋子
+        int boundary = -1;// 边界
+
+        int cnt_live_2 = 0;//活二的数量
+
+        // 连五 > 活四 > 死四*3 > 活三*2 >
+        // 活二*3 （略大于）死三*6 > 死二*4 > 其他棋型
+        // 遍历 8 个方向
+        for( int direct=1 ; direct <= 8 ; direct++ )  {
+            // 活四 必胜
+            // 1.活四  *22220
+            if(getLine(x,y,direct, 1) == me
+               && getLine(x,y,direct, 2) == me
+               && getLine(x,y,direct, 3) == me
+               && getLine(x,y,direct, 4) == me
+               && getLine(x,y,direct, 5) == empty)
+            {
+                value += 300000;
+                if(me == 1) value -= 500;// 人 不是当前棋手
+                continue ;
+            }
+
+            // 死四 ： 如果是己方则下子获得胜利，对手的话要竭力去赌
+            // 2. 死四A *22221
+            if(getLine(x,y,direct, 1) == me
+               && getLine(x,y,direct, 2) == me
+               && getLine(x,y,direct, 3) == me
+               && getLine(x,y,direct, 4) == me
+               && (getLine(x,y,direct, 5) == rival || getLine(x,y,direct, 5) == boundary))
+            {
+                value += 250000;
+                if(me == 1) value -= 500;
+                continue ;
+            }
+
+            // 3. 死四B 2*222
+            if(getLine(x,y,direct, -1) == me
+               && getLine(x,y,direct, 1) == me
+               && getLine(x,y,direct, 2) == me
+               && getLine(x,y,direct, 3) == me)
+            {
+                value += 240000;
+                if(me == 1) value -= 500;
+                continue ;
+            }
+
+            // 4. 死四C 22*22
+            if(getLine(x,y,direct, -2) == me
+               && getLine(x,y,direct, -1) == me
+               && getLine(x,y,direct, 1) == me
+               && getLine(x,y,direct, 2) == me)
+            {
+                value += 230000;
+                if(me == 1) value -= 500;
+                continue ;
+            }
+
+            // 活三 ： 可直接一手变成活四，当敌方活三出现时，必须进行防守
+            // 5. 活三A 222*0
+            if(getLine(x,y,direct, -1) == me
+               && getLine(x,y,direct, -2) == me
+               && getLine(x,y,direct, -3) == me)
+            {
+                if(getLine(x,y,direct, 1) == empty)
+                {
+                    value += 750;
+                    // 0222*0
+                    if(getLine(x,y,direct, -4) == empty)
+                    {
+                        value += 3150;
+                        if(me == 1)
+                        {
+                            value -= 500;
+                        }
+                    }
+                }
+                // 0222*1
+                if(getLine(x,y,direct, -4) == empty
+                   && (getLine(x,y,direct, 1) == rival || getLine(x,y,direct, 1) == boundary))
+                    value += 500;
+                continue ;
+            }
+
+            // 6. 活三B 2220*
+            if(getLine(x,y,direct, -1) == empty
+               && getLine(x,y,direct, -2) == me
+               && getLine(x,y,direct, -3) == me
+               && getLine(x,y,direct, -4) == me)
+            {
+                value += 350;
+                continue ;
+            }
+
+            // 死三 ： 能够得到死四的三，即便不去防守，下一手也只能形成死四，仍然守的住
+            // 7. 死三A 22*2
+            if(getLine(x,y,direct, -1) == me
+               && getLine(x,y,direct, -2) == me
+               && getLine(x,y,direct, 1) == me)
+            {
+                value += 600;
+                // 022*20
+                if(getLine(x,y,direct, -3) == empty
+                   && getLine(x,y,direct, 2) == empty)
+                {
+                    value += 3150;
+                    continue ;
+                }
+                //122*21
+                if((getLine(x,y,direct, -3) == rival || getLine(x,y,direct, -3) == boundary)
+                    && (getLine(x,y,direct, 2) == rival || getLine(x,y,direct, 2) == boundary)){
+                    continue ;
+                }
+                else {
+                    value += 700;
+                    continue ;
+                }
+            }
+
+            // 活二 ： 能够形成活三的二，如果能够形成较多的活二棋型，对局势有利
+            // 8. 活二数量 (!1)22*(!1)
+            if(getLine(x,y,direct, -1) == me
+               && getLine(x,y,direct, -2) == me
+               && getLine(x,y,direct, -3) != rival
+               && getLine(x,y,direct, 1) != rival)
+                cnt_live_2++;
+
+            // 周围如果已有我方棋子数目比较多的话，适当增加一下权值，越多机会越大
+            int surround = 0;
+            for (int k = -4; k <= 0; k++){
+                int tmp = 0;
+                for (int l = 0; l <= 4; l++){
+                    if(getLine(x,y,direct, k+l) == me)
+                        tmp++;
+                    else if((getLine(x,y,direct, k+l) == rival || getLine(x,y,direct, k+l) == boundary)){
+                        tmp = 0;
+                        break;
+                    }
+                }
+                surround += tmp;
+            }
+            value += surround * 15;
+        }
+        if(cnt_live_2 >= 2){
+            value += 3000;
+            if(me == 1) value -= 100;
+        }
+        return value;
+    }
+
+int MainWindow::score(int x, int y){
+    
+    int scoreSum=0;
+    // playerwhite -》1
+    int handOn= (player==playerblack)?2:1;
+    
+    if(board[x][y]!=0){
+        return -1;
+    }
+    else{
+        // ver 1
+        int playerNum=0;//对方子个数
+        int cpuNum=0; // 我方子个数
+        int emptyNum=0;//空白位个数
+        
+        // 我方评估
+        for(int direct =1;direct<=8;direct++){
+            playerNum=0;
+            cpuNum=0;
+            emptyNum=0;
+            for(int step = 1;step<=4;step++)
+            {
+//                qDebug("goP%d,%d:%d,%d,%d",x,y,goP.X,goP.Y,goP.score);
+                if(getLine(x,y,direct,step)==handOn){
+                    cpuNum++;
+                }
+                else if (getLine(x,y,direct,step)==0) {
+                    emptyNum++;
+                }
+                else {
+                    break;
+                    }  
+            }
+            
+            if(cpuNum==0){
+                //normal
+                scoreSum += 5;
+            }
+            else if (cpuNum==1) {
+                //活二
+                scoreSum += 10;
+            }
+            else if (cpuNum==2) {
+                if(emptyNum==1){
+                    //死三
+                    scoreSum += 25;
+                }
+                else if(emptyNum==2){
+                    // 活三
+                    scoreSum += 50;
+                }
+            }
+            else if(cpuNum==3){
+                    if(emptyNum==1){
+                        //死四
+                        scoreSum += 55;
+                    }
+                    else if (emptyNum==2) {
+                        // 活四
+                        scoreSum += 300;
+                    }
+            }
+            else if(cpuNum>=4){
+                    scoreSum+=30000;
+                    }
+            
+            emptyNum = 0;
+            
+            for(int step = 1;step<=4;step++)
+            {
+                
+                if(getLine(x,y,direct,step)==3-handOn){
+                    playerNum++;
+                }
+                else if (getLine(x,y,direct,step)==0) {
+                    emptyNum++;
+                }
+                else {
+                    break;
+                    }  
+            }
+            
+            if(playerNum==1){
+                // 杀二
+                scoreSum+=10;
+            }
+            else if (playerNum==2) {
+                // 杀三
+                if(emptyNum==1){
+                    // 死三
+                    scoreSum +=30;
+                }
+                else if(emptyNum==2){
+                    // 活三
+                    scoreSum += 40;
+                }
+            }
+            else if (playerNum==3) {
+                // 杀四
+                if(emptyNum==1){
+                    //死四
+                    scoreSum +=60;
+                }
+                else if(emptyNum==2){
+                    // 活四
+                    scoreSum += 200;
+                }
+            }
+            else if(playerNum==4){
+                // 杀五
+                    scoreSum += 20000;
+            }
+
+        }
+
+    return scoreSum;
+    }
+}
+
+int MainWindow::getLine(int x ,int y,int direction,int step){
+    switch (direction)
+    {
+    case 1:
+        x += step;// 向右
+        break;
+    case 2:
+        x -= step; //向左
+        break;
+    case 3:
+        x += step;
+        y += step; // 右下
+        break;
+    case 4:
+        x += step;
+        y -= step; // 右上
+        break;
+    case 5:
+        x -= step;
+        y += step; // 左下
+        break;
+    case 6:
+        x -= step;
+        y -= step; // 左上
+        break;
+    case 7:
+        y += step; // 向下
+        break;
+    case 8:
+        y -= step; // 向上
+    default:
+        break;
+    }
+    if(x<4||x>=COL+4||y<4||y>=COL+4){
+        return -1;
+    }
+    else{
+//        qDebug("%d",board[x][y]);
+    return board[x][y];
+        }
+}
+
+void MainWindow::on_pushButton_clicked()
+{
+    writeCSV();
+    initgame();
+
+
+}
+
+void MainWindow::timeClock(){
+
+    onTimeOut();
+    QTimer *pTimer = new QTimer(this);
+    // 设置定时间隔
+    pTimer->setInterval(1000);
+    connect(pTimer, SIGNAL(timeout()), this, SLOT(onTimeOut()));
+
+    // 启动定时器
+    pTimer->start();
+
+}
+
+void MainWindow::onTimeOut()
+{
+    // 获取系统当前时间
+    QDateTime dateTime = QDateTime::currentDateTime();
+    // 显示的内容
+//    ui->timeClock->display(dateTime.toString("yyyy-MM-dd HH:mm:ss.zzz"));
+    ui->timeClock->display(dateTime.toString("HH:mm:ss"));
+}
+
+void MainWindow::eveCpuGo(){
+    if(gamemode== started){
+        if(player==playerblack){
+            cpuGo();
+        }
+        else {
+            cpuGo2();
+        }
+    }
+    else {
+         Timer->stop();
+    }
+}
+
+void MainWindow::pveCpuGo(){
+    if(gamemode== started){
+
+            cpuGo2();
+            Timer->stop();
+            setMouseTracking(true);
+            PVE_ON_P=true;
+    }
+    else {
+         Timer->stop();
+    }
+
+
+
+}
+void MainWindow::stepRecord(int chessX,int chessY){
+
+    record->count =step_count;
+    record->x = chessX-3;
+    record->y= chessY-3;
+    record->player = (player==playerblack)?1:2;
+//    record->player = QString("Black");
+
+    record->next = (RECORDS*)malloc(sizeof(RECORDS));
+    record = record->next;
+    record->next=NULL;
+
+}
+
+
+void MainWindow::on_homeButton_clicked()
+{
+    writeCSV();
+    // ！！！这个地方会导致内存爆炸，可能与线程有关！！！
+    if(gametype==EVE){
+        Timer->stop();
+    }else{}
+
+    start *w = new start;
+    w->show();
+    w->gametype = PVE;
+
+    this->hide();
+}
+
+void MainWindow::writeCSV(){
+
+    QFile goData("gameRecord.csv");
+    int count =1;
+   record_p = HEAD->next;
+    if(goData.open(QIODevice::ReadOnly)){
+        int fsize=goData.size();
+        if(fsize==0){}
+        else{
+                int i = 5;
+                goData.seek(fsize-i);
+                QString temp = goData.read(1);
+                while (!temp.compare(">") == 0 && temp != EOF)
+                {
+                    i++;
+                    goData.seek(fsize - i);
+                    temp = goData.read(1);
+                }
+                i++;
+                goData.seek(fsize - i);
+                QString lastLine=goData.readLine().trimmed();
+                lastLine=lastLine.remove(0,2);
+                count = lastLine.toInt();
+                qDebug(lastLine.toStdString().c_str());
+            }
+
+    }else {}
+    goData.close();
+    count+=1;
+    QStringList lines;
+    QString cGametype;
+        if(gametype == PVE || gametype == PVE2){
+            cGametype=QString("PVE");
+        }
+        else if (gametype == PVP) {
+            cGametype=QString("PVP");
+        }
+        else {
+            cGametype=QString("EVE");
+        }
+    QString cGamewinner;
+    if(gamemode==started){
+        cGamewinner =QString("Undone");
+    }
+    else {
+        cGamewinner  = (player==playerwhite)?QString("white"):QString("black");
+    }
+
+    QString title= QString("Rec: %1,").arg(count);
+    QString title2= QString("%1,").arg(cGametype);
+    QString title3 = QString("%1,").arg(cGamewinner);
+    QString title4 = QString("%1\n").arg(step_count);
+    QString endLine=QString("->%1,%2\n").arg(count).arg(step_count);
+
+    QString tempData;
+//    QString tempPlayer;
+    int tempPlayer;
+    while (record_p->next!=NULL) {
+//        tempPlayer=(record_p->player==2)?QString("White"):QString("Black");
+        tempPlayer=(record_p->player==2)?1:2;
+        tempData =QString("%1,%2,%3\n").arg(tempPlayer).arg(record_p->x).arg(record_p->y);
+        record_p = record_p->next;
+        lines.append(tempData);
+    }
+//    lines << "black,5,13\n" << "white,11,12\n" << "20,21,22";
+
+    if (goData.open(QIODevice::ReadWrite | QIODevice::Append))
+    {
+     goData.write(title.toStdString().c_str());
+     goData.write(title2.toStdString().c_str());
+     goData.write(title3.toStdString().c_str());
+     goData.write(title4.toStdString().c_str());
+
+     for (int i = 0; i < lines.size(); i++)
+     {
+         goData.write(lines[i].toStdString().c_str());
+     }
+     goData.write(endLine.toStdString().c_str());
+     goData.close();
+    }
+
+}
+
diff --git a/mainwindow.h b/mainwindow.h
new file mode 100644
index 0000000..78f2f6c
--- /dev/null
+++ b/mainwindow.h
@@ -0,0 +1,69 @@
+#ifndef MAINWINDOW_H
+#define MAINWINDOW_H
+
+#include <QMovie>
+#include <QLabel>
+
+#include "gameset.h"
+#include "gameover.h"
+#include "start.h"
+
+namespace Ui {
+class MainWindow;
+}
+
+class MainWindow : public QMainWindow
+{
+    Q_OBJECT
+
+public:
+    explicit MainWindow(QWidget *parent = 0);
+    ~MainWindow();
+
+
+    PLAYER player;
+    GAMEMODE gamemode;
+    GAMETYPE gametype;
+    RECORDS *HEAD;
+    RECORDS *record;
+    RECORDS *record_p;
+    int step_count=0;
+    QTimer *Timer;
+
+    int board[COL+8][COL+8];
+
+    void initgame();
+    void stepRecord(int chessX,int chessY);
+
+
+private:
+    Ui::MainWindow *ui;
+    QPainter *painter;
+    int mouseX=-1,mouseY=-1;
+    bool first_go_done;// 第一棋子
+    bool PVE_ON_P = true;
+
+protected:
+    void paintEvent(QPaintEvent*);
+    void mouseMoveEvent(QMouseEvent *event);
+    void mouseReleaseEvent(QMouseEvent *event);
+
+    void timeClock();
+    int judge(int x,int y);
+    void cpuGo();
+    void cpuGo2();
+    int score(int chessx,int chessy);
+    int score2(int chessx,int chessy,int me);
+
+    void afterGo(int chessX,int chessY);
+
+    int getLine(int x ,int y,int direction,int step);
+    void writeCSV();
+private slots:
+    void on_pushButton_clicked();
+    void onTimeOut();
+    void eveCpuGo();
+    void pveCpuGo();
+    void on_homeButton_clicked();
+};
+#endif // MAINWINDOW_H
diff --git a/mainwindow.ui b/mainwindow.ui
new file mode 100644
index 0000000..a7428ce
--- /dev/null
+++ b/mainwindow.ui
@@ -0,0 +1,172 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<ui version="4.0">
+ <class>MainWindow</class>
+ <widget class="QMainWindow" name="MainWindow">
+  <property name="geometry">
+   <rect>
+    <x>0</x>
+    <y>0</y>
+    <width>1074</width>
+    <height>731</height>
+   </rect>
+  </property>
+  <property name="mouseTracking">
+   <bool>true</bool>
+  </property>
+  <property name="windowTitle">
+   <string>MainWindow</string>
+  </property>
+  <widget class="QWidget" name="centralWidget">
+   <property name="mouseTracking">
+    <bool>true</bool>
+   </property>
+   <widget class="QWidget" name="layoutWidget">
+    <property name="geometry">
+     <rect>
+      <x>678</x>
+      <y>232</y>
+      <width>351</width>
+      <height>311</height>
+     </rect>
+    </property>
+    <layout class="QGridLayout" name="gridLayout">
+     <item row="0" column="0" colspan="2">
+      <spacer name="horizontalSpacer">
+       <property name="orientation">
+        <enum>Qt::Horizontal</enum>
+       </property>
+       <property name="sizeHint" stdset="0">
+        <size>
+         <width>248</width>
+         <height>20</height>
+        </size>
+       </property>
+      </spacer>
+     </item>
+     <item row="1" column="0" colspan="2">
+      <widget class="QLCDNumber" name="timeClock">
+       <property name="font">
+        <font>
+         <family>Agency FB</family>
+         <pointsize>22</pointsize>
+         <weight>50</weight>
+         <italic>false</italic>
+         <bold>false</bold>
+        </font>
+       </property>
+       <property name="layoutDirection">
+        <enum>Qt::LeftToRight</enum>
+       </property>
+       <property name="styleSheet">
+        <string notr="true">font: 22pt &quot;Agency FB&quot;;</string>
+       </property>
+       <property name="digitCount">
+        <number>8</number>
+       </property>
+       <property name="segmentStyle">
+        <enum>QLCDNumber::Flat</enum>
+       </property>
+      </widget>
+     </item>
+     <item row="2" column="0">
+      <widget class="QLabel" name="label">
+       <property name="minimumSize">
+        <size>
+         <width>111</width>
+         <height>91</height>
+        </size>
+       </property>
+       <property name="font">
+        <font>
+         <family>Agency FB</family>
+         <pointsize>24</pointsize>
+         <weight>75</weight>
+         <bold>true</bold>
+        </font>
+       </property>
+       <property name="text">
+        <string>Step</string>
+       </property>
+      </widget>
+     </item>
+     <item row="2" column="1">
+      <widget class="QLCDNumber" name="stepClock">
+       <property name="styleSheet">
+        <string notr="true"/>
+       </property>
+       <property name="smallDecimalPoint">
+        <bool>false</bool>
+       </property>
+       <property name="digitCount">
+        <number>3</number>
+       </property>
+       <property name="mode">
+        <enum>QLCDNumber::Dec</enum>
+       </property>
+       <property name="segmentStyle">
+        <enum>QLCDNumber::Flat</enum>
+       </property>
+      </widget>
+     </item>
+     <item row="3" column="0">
+      <widget class="QPushButton" name="pushButton">
+       <property name="text">
+        <string>Restart</string>
+       </property>
+      </widget>
+     </item>
+     <item row="3" column="1">
+      <widget class="QPushButton" name="homeButton">
+       <property name="text">
+        <string>Home</string>
+       </property>
+      </widget>
+     </item>
+    </layout>
+   </widget>
+   <widget class="QWidget" name="verticalLayoutWidget">
+    <property name="geometry">
+     <rect>
+      <x>680</x>
+      <y>550</y>
+      <width>351</width>
+      <height>121</height>
+     </rect>
+    </property>
+    <layout class="QVBoxLayout" name="verticalLayout">
+     <item>
+      <widget class="QPlainTextEdit" name="LastStep"/>
+     </item>
+    </layout>
+   </widget>
+  </widget>
+  <widget class="QMenuBar" name="menuBar">
+   <property name="geometry">
+    <rect>
+     <x>0</x>
+     <y>0</y>
+     <width>1074</width>
+     <height>21</height>
+    </rect>
+   </property>
+  </widget>
+  <widget class="QToolBar" name="mainToolBar">
+   <property name="mouseTracking">
+    <bool>true</bool>
+   </property>
+   <attribute name="toolBarArea">
+    <enum>TopToolBarArea</enum>
+   </attribute>
+   <attribute name="toolBarBreak">
+    <bool>false</bool>
+   </attribute>
+  </widget>
+  <widget class="QStatusBar" name="statusBar"/>
+ </widget>
+ <layoutdefault spacing="6" margin="11"/>
+ <tabstops>
+  <tabstop>pushButton</tabstop>
+ </tabstops>
+ <resources/>
+ <connections/>
+</ui>
diff --git a/start.cpp b/start.cpp
index 39e0aab..7bef67b 100644
--- a/start.cpp
+++ b/start.cpp
@@ -1,14 +1,106 @@
 #include "start.h"
 #include "ui_start.h"
+#include "history.h"
+
+GAMETYPE start::gametype = PVE;
 
 start::start(QWidget *parent) :
     QDialog(parent),
     ui(new Ui::start)
 {
+
+
+//    this->setWindowFlags(Qt::FramelessWindowHint | windowFlags());
+    QLabel *label = new QLabel(this);
+
+    QMovie *movie = new QMovie(":image/icon/miku2.gif");
+    label->setMovie(movie); // 1. 设置要显示的 GIF 动画图片
+    movie->start(); // 2. 启动动画
+    label->show();
     ui->setupUi(this);
+
+    label->setWindowTitle("Welcome !");
+    this->setWindowIcon(QIcon(":image/icon/favicon2.png"));
+    this->setWindowTitle("Welcome !");
+
 }
 
 start::~start()
 {
     delete ui;
 }
+
+
+
+void start::on_AcceptButton_accepted()
+{
+    class MainWindow *w = new class MainWindow;
+    QDesktopWidget dw;
+//    int x= dw.width()*VIEW_VOL;
+//    int y=dw.height()*VIEW_VOL;
+    int x= 2600*VIEW_VOL;
+    int y= 1800*VIEW_VOL;
+    w->setFixedSize(x,y);
+    w->show();
+    this->hide();
+}
+
+void start::on_AcceptButton_rejected()
+{
+    QApplication *q;
+    q->quit();
+}
+
+
+
+void start::on_PVP_BUTTON_toggled(bool checked)
+{
+    if (checked){
+        this->gametype = PVP;
+    }
+}
+
+void start::on_PVE_BUTTON_toggled(bool checked)
+{
+    if(checked){
+        this->gametype = PVE;
+    }
+}
+
+void start::on_EVE_BUTTON_toggled(bool checked)
+{
+    if(checked){
+        this->gametype =EVE;
+    }
+}
+
+void start::on_radioButton_toggled(bool checked)
+{
+    if(checked){
+        this->gametype =PVE2;
+    }
+}
+
+void start::readCSV(){
+
+    QFile goData("gameRecord.csv");
+    if(goData.open(QIODevice::ReadOnly)){
+        History *h = new History;
+        h->show();
+        this->hide();
+        goData.close();
+
+    }
+    else {
+        //
+        QMessageBox *msg=new QMessageBox;
+        msg->critical(this,"错误","Data Not Found!",msg->Yes);
+    }
+
+}
+
+
+void start::on_pushButton_clicked()
+{
+    readCSV();
+}
diff --git a/start.cpp.y15904 b/start.cpp.y15904
new file mode 100644
index 0000000..a0cf17d
--- /dev/null
+++ b/start.cpp.y15904
@@ -0,0 +1,116 @@
+#include "start.h"
+#include "ui_start.h"
+#include "history.h"
+
+GAMETYPE start::gametype = PVE;
+
+start::start(QWidget *parent) :
+    QDialog(parent),
+    ui(new Ui::start)
+{
+
+
+//    this->setWindowFlags(Qt::FramelessWindowHint | windowFlags());
+    QLabel *label = new QLabel(this);
+
+    QMovie *movie = new QMovie(":image/icon/miku2.gif");
+    label->setMovie(movie); // 1. 设置要显示的 GIF 动画图片
+    movie->start(); // 2. 启动动画
+    label->show();
+    ui->setupUi(this);
+
+    label->setWindowTitle("Welcome !");
+    this->setWindowIcon(QIcon(":image/icon/favicon2.png"));
+    this->setWindowTitle("Welcome !");
+
+}
+
+start::~start()
+{
+    delete ui;
+}
+
+
+
+void start::on_AcceptButton_accepted()
+{
+    class MainWindow *w = new class MainWindow;
+    QDesktopWidget dw;
+//    int x= dw.width()*VIEW_VOL;
+//    int y=dw.height()*VIEW_VOL;
+    int x= 2600*VIEW_VOL;
+    int y= 1800*VIEW_VOL;
+    w->setFixedSize(x,y);
+    w->show();
+    this->hide();
+}
+
+void start::on_AcceptButton_rejected()
+{
+    QApplication *q;
+    q->quit();
+}
+
+
+
+void start::on_PVP_BUTTON_toggled(bool checked)
+{
+    if (checked){
+        this->gametype = PVP;
+    }
+}
+
+void start::on_PVE_BUTTON_toggled(bool checked)
+{
+    if(checked){
+        this->gametype = PVE;
+    }
+}
+
+void start::on_EVE_BUTTON_toggled(bool checked)
+{
+    if(checked){
+        this->gametype =EVE;
+    }
+}
+
+void start::on_radioButton_toggled(bool checked)
+{
+    if(checked){
+        this->gametype =PVE2;
+    }
+}
+
+void start::readCSV(){
+
+    QFile goData("gameRecord.csv");
+    if(goData.open(QIODevice::ReadOnly)){
+        History *h = new History;
+        h->show();
+        this->hide();
+        goData.close();
+//        class MainWindow *w = new class MainWindow;
+//        QDesktopWidget dw;
+//    //    int x= dw.width()*VIEW_VOL;
+//    //    int y=dw.height()*VIEW_VOL;
+//        int x= 2600*VIEW_VOL;
+//        int y= 1800*VIEW_VOL;
+//        w->setFixedSize(x,y);
+//        w->show();
+//        this->hide();
+    }
+    else {
+        //
+        QMessageBox *msg=new QMessageBox;
+        msg->critical(this,'错误','Data Not Found!',QMessageBox.Yes|QMessageBox.No)
+        msg->show();
+
+    }
+
+}
+
+
+void start::on_pushButton_clicked()
+{
+    readCSV();
+}
diff --git a/start.h b/start.h
index 1621a78..50f824d 100644
--- a/start.h
+++ b/start.h
@@ -2,7 +2,8 @@
 #define START_H
 
 #include <QDialog>
-
+#include "mainwindow.h"
+#include "QMessageBox"
 namespace Ui {
 class start;
 }
@@ -14,9 +15,29 @@ class start : public QDialog
 public:
     explicit start(QWidget *parent = 0);
     ~start();
+    static GAMETYPE gametype;
+    void readCSV();
+
+private slots:
+
+    void on_AcceptButton_accepted();
+
+    void on_AcceptButton_rejected();
+
+    void on_PVP_BUTTON_toggled(bool checked);
+
+    void on_PVE_BUTTON_toggled(bool checked);
+
+    void on_EVE_BUTTON_toggled(bool checked);
+
+    void on_radioButton_toggled(bool checked);
+
+    void on_pushButton_clicked();
 
 private:
     Ui::start *ui;
+
+
 };
 
 #endif // START_H
diff --git a/start.ui b/start.ui
index 72448c2..f5f30bf 100644
--- a/start.ui
+++ b/start.ui
@@ -1,69 +1,163 @@
+<?xml version="1.0" encoding="UTF-8"?>
 <ui version="4.0">
- <author/>
- <comment/>
- <exportmacro/>
  <class>start</class>
  <widget class="QDialog" name="start">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
-    <width>400</width>
-    <height>300</height>
+    <width>537</width>
+    <height>488</height>
    </rect>
   </property>
   <property name="windowTitle">
    <string>Dialog</string>
   </property>
-  <widget class="QDialogButtonBox" name="buttonBox">
+  <property name="styleSheet">
+   <string notr="true"/>
+  </property>
+  <widget class="QWidget" name="verticalLayoutWidget">
    <property name="geometry">
     <rect>
-     <x>30</x>
-     <y>240</y>
-     <width>341</width>
-     <height>32</height>
+     <x>80</x>
+     <y>0</y>
+     <width>361</width>
+     <height>441</height>
     </rect>
    </property>
-   <property name="orientation">
-    <enum>Qt::Horizontal</enum>
-   </property>
-   <property name="standardButtons">
-    <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>
-   </property>
+   <layout class="QVBoxLayout" name="verticalLayout">
+    <item alignment="Qt::AlignHCenter">
+     <widget class="QLabel" name="label">
+      <property name="font">
+       <font>
+        <family>Times New Roman</family>
+        <pointsize>16</pointsize>
+        <weight>75</weight>
+        <bold>true</bold>
+       </font>
+      </property>
+      <property name="text">
+       <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p align=&quot;center&quot;&gt;&lt;span style=&quot; font-size:36pt;&quot;&gt;Gomoku&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
+      </property>
+     </widget>
+    </item>
+    <item>
+     <widget class="QRadioButton" name="PVE_BUTTON">
+      <property name="styleSheet">
+       <string notr="true">background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(255, 255, 255, 125), stop:1 rgba(255, 255, 255, 125));
+font: 75 12pt &quot;Arial&quot;;</string>
+      </property>
+      <property name="text">
+       <string>PVE(P-first)</string>
+      </property>
+      <property name="checked">
+       <bool>true</bool>
+      </property>
+     </widget>
+    </item>
+    <item>
+     <widget class="QRadioButton" name="radioButton">
+      <property name="styleSheet">
+       <string notr="true">background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 191, 191, 100), stop:1 rgba(255, 255, 255, 125));
+font: 75 12pt &quot;Arial&quot;;</string>
+      </property>
+      <property name="text">
+       <string>PVE(E-first)</string>
+      </property>
+     </widget>
+    </item>
+    <item>
+     <widget class="QRadioButton" name="PVP_BUTTON">
+      <property name="styleSheet">
+       <string notr="true">background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 170, 255, 125), stop:1 rgba(255, 255, 255, 125));
+font: 75 12pt &quot;Arial&quot;;</string>
+      </property>
+      <property name="text">
+       <string>PVP</string>
+      </property>
+      <property name="checked">
+       <bool>false</bool>
+      </property>
+     </widget>
+    </item>
+    <item>
+     <widget class="QRadioButton" name="EVE_BUTTON">
+      <property name="styleSheet">
+       <string notr="true">background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(170, 0, 0, 125), stop:1 rgba(255, 255, 255, 125));
+font: 75 12pt &quot;Arial&quot;;</string>
+      </property>
+      <property name="text">
+       <string>EVE</string>
+      </property>
+     </widget>
+    </item>
+    <item>
+     <widget class="QPushButton" name="pushButton">
+      <property name="styleSheet">
+       <string notr="true">background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(157,105,59,125), stop:1 rgba(255, 255, 255, 125));
+font: 75 12pt &quot;Arial&quot;;
+</string>
+      </property>
+      <property name="text">
+       <string>History</string>
+      </property>
+     </widget>
+    </item>
+    <item alignment="Qt::AlignHCenter">
+     <widget class="QDialogButtonBox" name="AcceptButton">
+      <property name="font">
+       <font>
+        <family>Ubuntu</family>
+       </font>
+      </property>
+      <property name="styleSheet">
+       <string notr="true">background-color: rgba(255, 255, 255,255);</string>
+      </property>
+      <property name="orientation">
+       <enum>Qt::Horizontal</enum>
+      </property>
+      <property name="standardButtons">
+       <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>
+      </property>
+     </widget>
+    </item>
+   </layout>
   </widget>
+  <zorder>verticalLayoutWidget</zorder>
+  <zorder>horizontalSpacer</zorder>
+  <zorder>horizontalSpacer</zorder>
  </widget>
- <pixmapfunction/>
  <resources/>
  <connections>
   <connection>
-   <sender>buttonBox</sender>
+   <sender>AcceptButton</sender>
    <signal>accepted()</signal>
    <receiver>start</receiver>
    <slot>accept()</slot>
    <hints>
     <hint type="sourcelabel">
-     <x>248</x>
-     <y>254</y>
+     <x>158</x>
+     <y>238</y>
     </hint>
     <hint type="destinationlabel">
      <x>157</x>
-     <y>274</y>
+     <y>255</y>
     </hint>
    </hints>
   </connection>
   <connection>
-   <sender>buttonBox</sender>
+   <sender>AcceptButton</sender>
    <signal>rejected()</signal>
    <receiver>start</receiver>
    <slot>reject()</slot>
    <hints>
     <hint type="sourcelabel">
-     <x>316</x>
-     <y>260</y>
+     <x>180</x>
+     <y>244</y>
     </hint>
     <hint type="destinationlabel">
      <x>286</x>
-     <y>274</y>
+     <y>255</y>
     </hint>
    </hints>
   </connection>
